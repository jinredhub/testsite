{"version":3,"sources":["config.js","componentes/Navbar/Navbar.js","componentes/Input/Input.js","componentes/Button/Button.js","componentes/Alert/Alert.js","pages/Login/Login.js","pages/Signup/Signup.js","componentes/SearchbarNav/SearchbarNav.js","componentes/Music/Music.js","pages/Mymusic/Mymusic.js","componentes/Tabs/Tabs.js","pages/Diagnostics/Diagnostics.js","pages/Library/Library.js","App.js","serviceWorker.js","index.js","assets/logo.png","assets/bg2.png"],"names":["stage","apiGateway","bucket","pool_data","UserPoolId","ClientId","navbar","props","mobileNavbarStyle","display","showMobileNavbar","className","src","kenaLogo","alt","style","width","href","target","onClick","clicked","aria-label","icon","faBars","color","size","input","labelElement","inputElement","styleLabel","styleLabelForCheckbox","req","inputtype","type","htmlFor","id","label","fileLabelSpan","filelabelspan","fileLabel","filelabel","spanText","data-multiple-caption","options","map","option","key","value","displayValue","Fragment","name","checked","selected","ischecked","button","btnClass","disabled","children","alert","Login","state","loginErrorMessage","toggleMobileNavbar","setState","inputHandler","ev","formLoginHandler","email","loginEmail","password","loginPassword","dataObj","authenticationData","Username","Password","authenticationDetails","AuthenticationDetails","poolData","config","userPool","CognitoUserPool","userData","Pool","CognitoUser","authenticateUser","onSuccess","result","getCurrentUser","getSession","err","session","window","location","onFailure","message","JSON","stringify","console","log","this","bgImage","padding","paddingTop","login_email","onChange","placeholder","login_password","Component","Signup","searchbarNav","hidden","changed","uploadMusic1","uploadMusic2","music","duration","moment","music_duration","time","hours","seconds","minutes","convertedTime","modified_at","format","playPauseIcon","audioIcon","faPlay","faPause","genreOptions","music_genre_id","val","selectGenreOptions","push","selectDefaultValue","music_genre","genreId","i","bind","music_id","music_url","deleteMusicClicked","titleAndDescriptionChanged","music_title","onBlur","titleAndDescriptionBlurred","status","music_instrument","multiple","defaultValue","isMulti","isClearable","genreChanged","music_description","rows","diagnosticsButtonClicked","Math","round","kena_score","Mymusic","userId","myMusic","loadingIcon","playPauseAudio","musicId","fileUrl","playing","handleOutsideClick","e","navbarNode","contains","pNode","getAuthenticatedUser","checkLoggedInemailIsSameAsSendingRequest","snedingEmail","uploadMusicHandler","labelVal","nextElementSibling","innerHTML","fileName","files","length","getAttribute","replace","split","pop","span","fileNameSplit","fileExtension","toLowerCase","fileSize","isAcceptableExtension","Date","now","userFile","that","evt","f","reader","FileReader","onload","binaryData","base64String","btoa","user_file","axios","method","data","contentType","headers","getIdToken","getJwtToken","then","response","catch","readAsBinaryString","audioEl","document","createElement","newMusicId","newFileUrl","paused","play","newPlayPauseAudio","pause","path","musicBucket","ajaxData","url","downloadfile","checkAudioIcon","descriptionChangeHandler","index","findIndex","copiedMusic","descriptionBlurredHandler","ajaxUrl","update_music_info","updateDatabase","deleteMusicHandler","delete_music","user_id","music_status","updatedData","produce","draft","splice","genreChangeHandler","objValueToArray","obj","diagnosticsButtonClickHandler","preventDefault","encryptedUserId","CryptoJS","AES","encrypt","encryptedMusicId","musicData","toString","localStorage","setItem","addEventListener","cognitoUser","username","checkUserInDbAjaxData","checkfirsttimelogin","Item","localStorageData","promoCode","getItem","parse","save_user_to_user_table","ajaxDataGetGenreEtc","get_genre_etc","genreEtc","musicScale","genre","instrument","mood","musicKey","get_music_list","music_info_list","sort","a","b","created_at","removeEventListener","loading","faSpinner","spin","musicList","diagnostics_status","music_satatus","published","ref","node","h1Node","Tabs","buttons","React","Children","child","activeTab","Diagnostics","earlyLateChart","createRef","chartRef2","rhythmChartX","rhythmChartY","tabButtonClicked","testFunc","createEarlyLateChart","rhythmBackgroundColor","rhythmAnchor","earlyLateChartRef","current","getContext","Chart","labels","datasets","backgroundColor","borderWidth","maintainAspectRatio","scales","yAxes","gridLines","ticks","fontColor","min","max","callback","values","xAxes","scaleLabel","labelString","beginAtZero","legend","plugins","datalabels","align","anchor","formatter","context","changeChartHandler","bytesUserId","decrypt","bytesAuthorId","authorId","bytesMusicId","enc","Utf8","music_author_id","isViewerIsAuthor","get_music_diagnostics","errors","beat_times","toFixed","overflowX","height","Library","get_music_library","App","exact","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"0WAEe,GACXA,MAHgB,OAIhBC,YAAU,GAEN,oBAAwB,kFAGxB,eAAmB,6EAEnB,WAAe,yEAEf,aAAiB,2EAEjB,kBAAsB,gFAEtB,aAAiB,2EAEjB,2BAA+B,yFAE/B,cAAiB,4EAEjB,wBAA2B,sFAI3B,sBAA0B,oFAE1B,iBAAqB,+EAErB,mBAAuB,iFAEvB,mBAAuB,iFAIvB,sBAA0B,oFAG1B,kBAAsB,gFAEtB,YAAgB,0EAEhB,eAAmB,6EACnB,kBAAsB,gFAGtB,iBAAqB,+EACrB,oBAAuB,kFACvB,qBAAwB,oFA9ClB,mCA+CiB,mFA/CjB,cAiDN,iCAAkC,8FAjD5B,cAkDN,+BAAgC,4FAlD1B,GAoDVC,OAAQ,CAEJ,YAAgB,gDAEpBC,UAAW,CACPC,WAAY,sBACZC,SAAU,+B,iDCPHC,EA9CA,SAACC,GAEZ,IAAIC,EAAoB,CACpBC,QAAS,QAMb,OAJGF,EAAMG,mBACLF,EAAkBC,QAAU,SAI5B,yBAAKE,UAAU,UAEX,yBAAKA,UAAU,mGACX,yBAAKC,IAAKC,IAAUC,IAAI,OAAOC,MAAO,CAACC,MAAM,WACjD,6BACI,uBAAGC,KAAK,uBAAuBC,OAAO,UAAtC,QACA,uBAAGD,KAAK,4BAA4BC,OAAO,UAA3C,SACA,uBAAGD,KAAK,2BAA2BC,OAAO,UAA1C,QACA,uBAAGD,KAAK,8BAA8BC,OAAO,UAA7C,WACA,uBAAGD,KAAK,2BAA2BC,OAAO,UAA1C,QACA,uBAAGD,KAAK,IAAIN,UAAU,gBAAtB,YAMJ,yBAAKA,UAAU,8FACX,yBAAKA,UAAU,aAAaI,MAAOP,GAC/B,uBAAGS,KAAK,wBAAR,QACA,uBAAGA,KAAK,gBAAgBN,UAAU,mBAAlC,eACA,uBAAGM,KAAK,aAAaN,UAAU,eAA/B,YACA,uBAAGM,KAAK,YAAYN,UAAU,eAA9B,WACA,uBAAGM,KAAK,YAAYN,UAAU,eAA9B,WACA,uBAAGM,KAAK,IAAIN,UAAU,gBAAtB,WAEJ,uBAAGQ,QAASZ,EAAMa,QAASH,KAAK,IAAIN,UAAU,mBAAmBU,aAAW,wCACxE,kBAAC,IAAD,CACIC,KAAMC,IACNC,MAAM,QACNC,KAAK,WC2CdC,G,MAxFD,SAACnB,GACX,IAAIoB,EAAe,KACfC,EAAe,KACfC,EAAa,aACbC,EAAwB,oBAO5B,GALGvB,EAAMwB,MACLF,GAAc,OACdC,GAAyB,QAGN,UAApBvB,EAAMyB,WAAwC,SAAfzB,EAAM0B,KACpCN,EAAgB,2BAAOhB,UAAWkB,EAAYK,QAAS3B,EAAM4B,IAAK5B,EAAM6B,OACxER,EAAe,yCAAOjB,UAAU,aAAgBJ,SAG/C,GAAuB,UAApBA,EAAMyB,WAAwC,aAAfzB,EAAM0B,KACzCN,EAAgB,2BAAOhB,UAAWkB,EAAYK,QAAS3B,EAAM4B,IAAK5B,EAAM6B,OACxER,EAAe,yCAAOjB,UAAU,aAAgBJ,SAE/C,GAAuB,aAApBA,EAAMyB,UACVL,EAAgB,2BAAOhB,UAAWkB,EAAYK,QAAS3B,EAAM4B,IAAK5B,EAAM6B,OACxER,EAAe,4CAAUjB,UAAU,aAAgBJ,SAElD,GAAuB,UAApBA,EAAMyB,WAAwC,SAAfzB,EAAM0B,KAAgB,CAGzD,IAAII,EAAgB9B,EAAM+B,cACtBC,EAAYhC,EAAMiC,UAClBC,EAAWlC,EAAM6B,MAClB7B,EAAM+B,eACLG,EAAW,KACXF,EAAY,MAERhC,EAAMiC,YACVC,EAAW,KACXJ,EAAgB,MAEpBT,EAAe,6BACC,2CAAWrB,EAAX,CAAkBI,UAAU,YACrB+B,wBAAsB,4BAC7B,2BAAOR,QAAS3B,EAAM4B,IAAI,8BAAOE,EAAeE,EAAWE,SAGnD,WAApBlC,EAAMyB,WACVL,EAAgB,2BAAOhB,UAAWkB,EAAYK,QAAS3B,EAAM4B,IAAK5B,EAAM6B,OACxER,EAAe,0CAAQjB,UAAU,eAAkBJ,GAC9CA,EAAMoC,QAAQC,KAAI,SAAAC,GACf,OAAO,4BAAQC,IAAKD,EAAOE,MAAOA,MAAOF,EAAOE,OAAQF,EAAOG,mBAI/C,UAApBzC,EAAMyB,WAAwC,UAAfzB,EAAM0B,KAMzCL,EAAe,yBAAKjB,UAAU,aACbJ,EAAMoC,QAAQC,KAAI,SAAAC,GACf,OAAO,kBAAC,IAAMI,SAAP,CAAgBH,IAAKD,EAAOV,IAC/B,2CAAW5B,EAAX,CAAkB0B,KAAM1B,EAAM0B,KAAMtB,UAAU,gDAAgDwB,GAAIU,EAAOV,GAAIe,KAAM3C,EAAM2C,KAAMH,MAAOF,EAAOE,MAAOI,QAASN,EAAOE,QAAUxC,EAAM6C,YACpL,2BAAOzC,UAAU,wBAAwBuB,QAASW,EAAOV,IAAKU,EAAOT,YAKrE,UAApB7B,EAAMyB,WAAwC,aAAfzB,EAAM0B,OAIzCL,EAAe,6BACC,2BAAOjB,UAAWmB,EAAuBI,QAAS3B,EAAM2C,MAAO3C,EAAM6B,MACrE,2CAAW7B,EAAX,CAAkB4C,UAAW5C,EAAM8C,aAC3B,0BAAM1C,UAAU,iBAM5C,OACI,yBAAKA,UAAU,SACVgB,EACAC,KC/DE0B,G,MApBA,SAAC/C,GAEZ,IAAIgD,EAAW,GAWf,OATIA,EADe,YAAhBhD,EAAMiB,MACI,kBAEW,WAAhBjB,EAAMiB,MACC,aAGA,MAIX,yBAAKb,UAAU,UACX,0CAAQ6C,SAAUjD,EAAMiD,SAAU7C,UAAW4C,GAAchD,GAAQA,EAAMkD,aCKtEC,G,MApBD,SAACnD,GAEX,IAAIgD,EAAW,GASf,MARmB,YAAhBhD,EAAMiB,MACL+B,EAAS,gBAEW,WAAhBhD,EAAMiB,QACV+B,EAAW,gBAKX,yBAAK5C,UAAU,SACX,yBAAKA,UAAW4C,GACXhD,EAAMkD,aCyKRE,E,2MAvKXC,MAAM,CACJlD,kBAAkB,EAClBmD,kBAAmB,GACnB,WAAc,GACd,cAAiB,I,EAOnBC,mBAAqB,WACjB,EAAKC,SAAS,CACVrD,kBAAmB,EAAKkD,MAAMlD,oB,EAItCsD,aAAc,SAACC,EAAIhC,GACH,eAATA,EACC,EAAK8B,SAAS,CACV,WAAcE,EAAG/C,OAAO6B,QAGf,kBAATd,GACJ,EAAK8B,SAAS,CACV,cAAiBE,EAAG/C,OAAO6B,S,EAKvCmB,iBAAmB,WACf,IAAMC,EAAQ,EAAKP,MAAMQ,WACnBC,EAAW,EAAKT,MAAMU,cAEtBC,EAAU,CACZJ,MAAOA,EACPE,SAAUA,GAGd,GAAGF,GAASE,EAAS,CAKjB,IAAMG,EAAqB,CACvBC,SAAUF,EAAQJ,MAClBO,SAAUH,EAAQF,UAEhBM,EAAwB,IAAIC,IAC9BJ,GAEEK,EAAW,CACbzE,WAAY0E,EAAO3E,UAAUC,WAC7BC,SAAUyE,EAAO3E,UAAUE,UAE3B0E,EAAW,IAAIC,IAAgBH,GAE/BI,EAAW,CACXR,SAAUF,EAAQJ,MAClBe,KAAMH,GAGQ,IAAII,IAAYF,GAEtBG,iBAAiBT,EAAuB,CAChDU,UAAW,SAASC,GAGhBP,EAASQ,iBAAiBC,YAAW,SAASC,EAAKC,GAC5CD,EACC/B,MAAM,0BAGNiC,OAAOC,SAAS3E,KAAO,iBAMnC4E,UAAW,SAASJ,GAChB/B,MAAM+B,EAAIK,SAAWC,KAAKC,UAAUP,YAO5C,EAAK1B,SAAS,CACVF,kBAAmB,gC,qHAMtB,IAAD,OACJoC,QAAQC,IAAI,yBAA0BC,KAAKvC,OAE3C,IAAIC,EAAoB,KAKxB,OAJGsC,KAAKvC,MAAMC,oBACVA,EAAoB,kBAAC,EAAD,CAAOrC,MAAM,UAAU2E,KAAKvC,MAAMC,oBAItD,yBAAKlD,UAAU,SACX,yBAAKC,IAAKwF,IAAStF,IAAI,mBAAmBqB,GAAG,UAAUxB,UAAU,gBAEjE,iCACI,kBAAC,EAAD,CACID,iBAAkByF,KAAKvC,MAAMlD,iBAC7BU,QAAS+E,KAAKrC,qBAElB,yBAAKnD,UAAU,YAAYI,MAAO,CAACsF,QAAS,SACxC,yBAAK1F,UAAU,WACX,yBAAKI,MAAO,CAACuF,WAAW,WAExB,yBAAKvF,MAAO,CAACsF,QAAS,eAClB,wBAAI1F,UAAU,SAAd,aACA,yBAAKA,UAAU,WAAf,wBAIJ,yBAAKA,UAAU,gBACX,2BAAOsB,KAAK,OACRc,MAAOoD,KAAKvC,MAAM2C,YAClBC,SAAU,SAACvC,GAAD,OAAM,EAAKD,aAAaC,EAAI,eACtCwC,YAAY,QACZ9F,UAAU,gBAGlB,yBAAKA,UAAU,gBACX,2BAAOsB,KAAK,WACRc,MAAOoD,KAAKvC,MAAM8C,eAClBF,SAAU,SAACvC,GAAD,OAAM,EAAKD,aAAaC,EAAI,kBACtCwC,YAAY,WACZ9F,UAAU,gBAGlB,yBAAKA,UAAU,iCACX,uBAAGA,UAAU,OAAOM,KAAK,yBAAzB,oBAGH4C,EAED,yBAAKlD,UAAU,gBACX,kBAAC,EAAD,CACIQ,QAASgF,KAAKjC,iBACdjC,KAAK,SACLT,MAAM,UACNb,UAAU,eAJd,UAQJ,yBAAKA,UAAU,kCACX,uBAAGA,UAAU,OAAOM,KAAK,iBAAzB,gBAGR,yBAAKN,UAAU,mB,GA7JnBgG,aCSLC,G,iNAvBXhD,MAAM,G,qHAcF,OAHAqC,QAAQC,IAAI,yBAA0BC,KAAKvC,OAIvC,yBAAKjD,UAAU,UACX,gD,GAjBKgG,c,yEC8CNE,G,OAzCM,SAACtG,GAIlB,OACI,yBAAKI,UAAU,gBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,4BAAQuC,KAAK,mBAAmBvC,UAAU,oBACtC,4BAAQoC,MAAM,OAAd,OACA,4BAAQA,MAAM,WAAd,YACA,4BAAQA,MAAM,WAAd,YAEJ,2BAAOpC,UAAU,YAAYsB,KAAK,OAAOuB,UAAQ,EAACiD,YAAY,+BAElE,yBAAK9F,UAAU,+DACX,yBAAKA,UAAU,eACX,uBAAGM,KAAK,gBAAgBN,UAAU,kBAAkBmG,QAAM,GAA1D,eACA,uBAAG7F,KAAK,aAAaN,UAAU,eAA/B,YACA,uBAAGM,KAAK,YAAYN,UAAU,eAA9B,WACA,uBAAGM,KAAK,YAAYN,UAAU,eAA9B,YAEJ,6BACI,kBAAC,EAAD,CACIqB,UAAU,QACVC,KAAK,OACLiB,KAAK,cACLf,GAAG,cACHqE,SAAUjG,EAAMwG,QAChBzE,cAAe/B,EAAMyG,aACrBxE,UAAWjC,EAAM0G,qB,kCCmH9BC,EAlJD,SAAC3G,GAGX,IAAM4G,EAAWC,IAAOD,SAAS5G,EAAM8G,eAAgB,WAEnDC,EAAO,GACLC,EAAQJ,EAASI,QACpBA,EAAQ,IACPD,EAAOC,EAAQ,KAGnB,IAAIC,EAAUL,EAASK,UACpBA,EAAS,KACRA,EAAU,IAAMA,GAEpBF,EAAOA,EAAOH,EAASM,UAAa,IAAMD,EAK1C,IAAME,EAAgBN,IAAO7G,EAAMoH,YAAa,KAAKC,OAAO,eAKxDC,EAAgB,IACG,aAApBtH,EAAMuH,UACLD,EAAgB,kBAAC,IAAD,CACIvG,KAAMyG,IACNvG,MAAM,UACNC,KAAK,OAED,cAApBlB,EAAMuH,YACVD,EAAgB,kBAAC,IAAD,CACIvG,KAAM0G,IACNxG,MAAM,UACNC,KAAK,QAM7B,IAAIwG,EAAe1H,EAAM2H,eAAetF,KAAI,SAAAuF,GACxC,OAAO,4BAAQrF,IAAKqF,EAAKpF,MAAOoF,GAAMA,MAKtCC,EAAqB,GACzB7H,EAAM2H,eAAetF,KAAI,SAAAuF,GACrBC,EAAmBC,KAAK,CACpBtF,MAAOoF,EAAK/F,MAAO+F,OAO3B,IAAIG,EAAqB,GA2BzB,OA1BA/H,EAAMgI,YAAY3F,KAAI,SAAAuF,GAClB5H,EAAM2H,eAAetF,KAAI,SAAC4F,EAASC,GAC5BN,IAAQK,GACPF,EAAmBD,KAAKD,EAAmBK,UAwBnD,yBAAK9H,UAAU,SACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,iBACX,4BAAQQ,QAASZ,EAAMa,QAAQsH,U,EAAWnI,EAAMoI,SAAUpI,EAAMqI,WAAY3G,KAAK,SAAStB,UAAU,kBAAkBkH,GACtH,4BAAQ5F,KAAK,SAAStB,UAAU,kBAAkBQ,QAASZ,EAAMsI,mBAAmBH,U,EAAWnI,EAAMoI,WAArG,MAEJ,yBAAKhI,UAAU,sDACX,yBAAKI,MAAO,CAACC,MAAO,UACpB,6BAAK,2BAAOwF,SAAU,SAACvC,GAAD,OAAM1D,EAAMuI,2BAA2B7E,EAAI1D,EAAMoI,SAAU,UAAU1G,KAAK,OAAOtB,UAAU,QAAQoC,MAAOxC,EAAMwI,YAAaC,OAAQzI,EAAM0I,2BAA2BP,U,EAAWnI,EAAMoI,SAAU,WAAvN,cAAiP,0BAAMhI,UAAU,YAAhB,YAAqC2G,GAAtR,IAAmS,0BAAM3G,UAAU,aAAhB,MAAgC+G,GAAnU,IAAyV,0BAAM/G,UAAU,mBAAhB,OACrV,yBAAKI,MAAO,CAACsF,QAAS,UAAa,0BAAM1F,UAAU,UAAUJ,EAAM2I,QAAnE,MAAoF,0BAAMvI,UAAU,cAAcJ,EAAM4I,kBAAwB,0BAAMrC,QAAM,GAAC,4BAAQnG,UAAU,sCAA/K,KAGI,0BAAMA,UAAU,SAASJ,EAAMgI,aAAmB,8BAAO,4BAAQ5H,UAAU,8BAA8ByI,UAAQ,GAChHnB,IAEL,kBAAC,IAAD,CACIoB,aAAcf,EACdgB,SAAO,EACPC,aAAa,EAEb5G,QAASyF,EACT5B,SAAU,SAACzD,GAAD,OAASxC,EAAMiJ,aAAazG,EAAOxC,EAAMoI,cAGvD,8BAAUnC,SAAU,SAACvC,GAAD,OAAM1D,EAAMuI,2BAA2B7E,EAAI1D,EAAMoI,SAAU,gBAAgBK,OAAQzI,EAAM0I,2BAA2BP,U,EAAWnI,EAAMoI,SAAU,eAAgB5F,MAAOxC,EAAMkJ,kBAAmB9I,UAAU,qBAAqB+I,KAAK,OAE3P,yBAAK3I,MAAO,CAACC,MAAO,SAAWL,UAAU,YACrC,uBAAGQ,QAAS,SAAC8C,GAAD,OAAM1D,EAAMoJ,yBAAyB1F,EAAI1D,EAAMoI,WAAWhI,UAAU,mBAAmBM,KAAK,KAAxG,YACA,8BACA,yBAAKN,UAAU,4CAA2C,0BAAMA,UAAU,kBAAhB,cAAkD,0BAAMA,UAAU,aAAaiJ,KAAKC,MAAMtJ,EAAMuJ,mBCooBnKC,E,2MAruBXnG,MAAM,CACFoG,OAAQ,GACRC,QAAS,GACTjD,aAAc,eACdC,aAAc,eACdiD,aAAa,EACbxJ,kBAAkB,EAClByJ,eAAgB,CACZC,QAAS,KACTC,QAAS,KACTC,SAAS,I,EAkNjBC,mBAAqB,SAACC,GAEf,EAAKC,WAAWC,SAASF,EAAEtJ,UAI1B+E,QAAQC,IAAI,kBACZ,EAAKnC,SAAS,CACVrD,kBAAkB,KAKvB,EAAKiK,MAAMD,SAASF,EAAEtJ,SAIrB+E,QAAQC,IAAI,c,EAIpB0E,qBAAuB,WACnB,IAAM/F,EAAW,CACbzE,WAAY0E,EAAO3E,UAAUC,WAC7BC,SAAUyE,EAAO3E,UAAUE,UAI/B,OADe,IAAI2E,IAAgBH,GACnBU,kB,EAGpBsF,yCAA2C,SAACC,GAIxC,OAFe,EAAKlH,MAAMoG,QAEbc,G,EAQjBhH,mBAAqB,WACjB,EAAKC,SAAS,CACVrD,kBAAmB,EAAKkD,MAAMlD,oB,EAItCqK,mBAAqB,SAAC9G,GAElB,GADAgC,QAAQC,IAAI,SAAUjC,EAAG/C,OAAOe,MAC7BgC,EAAG/C,OAAOe,MAA2B,SAAnBgC,EAAG/C,OAAOe,KAAgB,CAE3C,IACM+I,EADQ/G,EAAG/C,OAAO+J,mBACDC,UAEnBC,EAAW,GAaf,GAZGlH,EAAG/C,OAAOkK,OAASnH,EAAG/C,OAAOkK,MAAMC,OAAS,EAC3CF,GAAYlH,EAAG/C,OAAOoK,aAAa,0BAA4B,IAAIC,QAAQ,UAAWtH,EAAG/C,OAAOkK,MAAMC,SAGtGF,EAAWlH,EAAG/C,OAAO6B,MAAMyI,MAAM,MAAMC,MAEvCxF,QAAQC,IAAI,sBAAuBjC,EAAG/C,OAAOkK,MAAM,IACnDnF,QAAQC,IAAI,cAAejC,EAAG/C,OAAOkK,MAAM,GAAGlI,MAC9C+C,QAAQC,IAAI,cAAejC,EAAG/C,OAAOkK,MAAM,GAAGnJ,MAC9CgE,QAAQC,IAAI,cAAejC,EAAG/C,OAAOkK,MAAM,GAAG3J,KAAK,KAAK,KAAO,OAGhE0J,EAAS,CACR,IAAMO,EAAOzH,EAAG/C,OAAOgC,KAAM,EAC7B+C,QAAQC,IAAI,eAAgBwF,GAC5B,EAAK3H,SAAL,eAAiB2H,EAAOP,IAGxB,IAAMQ,EAAiB1H,EAAG/C,OAAOkK,MAAM,GAAGlI,KAAKsI,MAAM,KACjDI,EAAgBD,EAAcA,EAAcN,OAAQ,GACxDO,EAAgBA,EAAcC,cAC9B,IAAMC,EAAWlC,KAAKC,MAAM5F,EAAG/C,OAAOkK,MAAM,GAAG3J,KAAK,KAAK,MAEnDuI,EAAS,EAAKpG,MAAMoG,OAC1B/D,QAAQC,IAAI,cAAe0F,EAAgB,KAAME,GACjD7F,QAAQC,IAAI,qBAAsByF,EAAc,IAChD1F,QAAQC,IAAI,WAAY8D,GAExB,IAAI+B,EAAwB,KAU5B,GAToB,OAAjBH,GAA2C,OAAjBA,GAA2C,OAAjBA,GAA2C,OAAjBA,EAC7EG,GAAwB,EAIxBrI,MAAM,iEAIPqI,GAAyBD,EAAW,EAAE,CACrC7F,QAAQC,IAAI,6BAGZ,EAAKnC,SAAS,CACVmG,aAAa,IAKjB,IAAIjF,EAAW,CACX,OAAU+E,EACV,SAAY2B,EAAc,GAC1B,WAAcK,KAAKC,MACnB,MAASnH,EAAO9E,OAGdkM,EAAWjI,EAAG/C,OAAOkK,MAAM,GAEjCnF,QAAQC,IAAI,aAAcjB,GAE1B,IAAMkH,EAAI,gBAGV,SAA2BC,GACvB,IAAIC,EAAIH,EACJI,EAAS,IAAIC,WAEjBD,EAAOE,OACI,SAAShC,GAEZ,IAAIiC,EAAajC,EAAEtJ,OAAOoE,OAEtBoH,EAAe/G,OAAOgH,KAAKF,GAC/BxH,EAAS2H,UAAYF,EAErBzG,QAAQC,IAAI,iBAAkBwG,GAG9BzG,QAAQC,IAAI,OAAQiG,GACpBA,EAAKvB,uBAAuBpF,YAAW,SAASC,EAAKC,GAC9CD,EACC/B,MAAM,0BAKHyI,EAAKtB,yCAAyC5F,EAAS+E,SAErD6C,IAAM,CAEHC,OAAQ,OACRC,KAAMhH,KAAKC,UAAUf,GACrB+H,YAAa,mBACbC,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,qBAAsBmH,MAEnCC,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,UAU7C6G,EAAOiB,mBAAmBlB,GA7C9B,QAkDJ,CACA,IAAMjK,EAAQ6B,EAAG/C,OAAOgC,KAAM,EAC9B,EAAKa,SAAL,eAAgB3B,EAAO4I,O,EAKnCwC,QAAUC,SAASC,cAAc,S,EAEjCvD,eAAiB,SAACwD,EAAYC,GAS1B,GANA3H,QAAQC,IAAI,QACZD,QAAQC,IAAI,eAAgByH,GAC5B1H,QAAQC,IAAI,gBAAiB,EAAKtC,MAAMuG,eAAeC,SACvDnE,QAAQC,IAAI,eAAgB0H,GAGzB,EAAKhK,MAAMuG,eAAeC,UAAYuD,EAGrC,GAFA1H,QAAQC,IAAI,iBACZD,QAAQC,IAAI,QAAS,EAAKsH,QAAQK,QAC/B,EAAKL,QAAQK,OAAO,CACnB5H,QAAQC,IAAI,gBAEZ,EAAKsH,QAAQM,OAEb,IAAMC,EAAiB,eAAO,EAAKnK,MAAMuG,gBACzC4D,EAAkBzD,SAAU,EAC5B,EAAKvG,SAAS,CACXoG,eAAgB4D,QAGnB,CACA9H,QAAQC,IAAI,oBAEZ,EAAKsH,QAAQQ,QAEb,IAAMD,EAAiB,eAAO,EAAKnK,MAAMuG,gBACzC4D,EAAkBzD,SAAU,EAC5B,EAAKvG,SAAS,CACVoG,eAAgB4D,QAIxB,CAEC9H,QAAQC,IAAI,mBAEZ,IAAMiG,EAAI,eAIL8B,EAAOL,EAAWpC,MAAM1G,EAAO5E,OAAOgO,aAAa,GAEzDjI,QAAQC,IAAI,SAAU+H,GAEtB,IAAME,EAAW,CACbF,KAAMA,EACN,MAASnJ,EAAO9E,OAGpB,EAAK4K,uBAAuBpF,YAAW,SAASC,EAAKC,GAC9CD,EACC/B,MAAM,2BAINuC,QAAQC,IAAI,aAAciI,GAE1BtB,IAAM,CACFuB,IAAKtJ,EAAO7E,WAAWoO,aACvBvB,OAAQ,OACRC,KAAMhH,KAAKC,UAAUmI,GACrBlB,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,qBAAsBmH,GAIlClB,EAAKqB,QAAQ5M,IAAMyM,EAASN,KAC5BZ,EAAKqB,QAAQM,OAEb,IAAMC,EAAiB,eAAO5B,EAAKvI,MAAMuG,gBACzC4D,EAAkB3D,QAAUuD,EAC5BI,EAAkB1D,QAAUuD,EAC5BG,EAAkBzD,SAAU,EAE5B6B,EAAKpI,SAAS,CACVoG,eAAgB4D,OAGrBT,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,Y,EAOzC6I,eAAiB,SAAClE,GAId,OAHAnE,QAAQC,IAAI,YAAakE,GACzBnE,QAAQC,IAAI,kBAAmB,EAAKtC,MAAMuG,eAAeC,SACzDnE,QAAQC,IAAI,iBAAkB,EAAKtC,MAAMuG,eAAeG,SACrD,EAAK1G,MAAMuG,eAAeC,UAAYA,GAAW,EAAKxG,MAAMuG,eAAeG,QACnE,YAGA,Y,EAIfiE,yBAA2B,SAACtK,EAAImG,EAASnI,GACrC,IAAMkG,EAAMlE,EAAG/C,OAAO6B,MAGhByL,EAAQ,EAAK5K,MAAMqG,QAAQwE,WAAU,SAAAtG,GACvC,OAAOA,EAAIQ,WAAayB,KAItBsE,EAAW,eAAO,EAAK9K,MAAMqG,QAAQuE,IAE9B,gBAATvM,EACAyM,EAAYjF,kBAAoBtB,EAEnB,UAATlG,IACJyM,EAAY3F,YAAcZ,GAI9B,IAAM8B,EAAO,YAAO,EAAKrG,MAAMqG,SAC/BA,EAAQuE,GAASE,EAEjB,EAAK3K,SAAS,CACVkG,QAASA,K,EAKjB0E,0BAA4B,SAACvE,GAEzB,IAAMoE,EAAQ,EAAK5K,MAAMqG,QAAQwE,WAAU,SAAAtG,GACvC,OAAOA,EAAIQ,WAAayB,KAItBwE,EAAU9J,EAAO7E,WAAW4O,kBAE5BV,EAAW,CACb,QAAW,EAAKvK,MAAMoG,OACtB,SAAYI,EACZ,YAAe4B,KAAKC,MACpB,YAAe,EAAKrI,MAAMqG,QAAQuE,GAAOzF,YAGzC,kBAAsB,EAAKnF,MAAMqG,QAAQuE,GAAO/E,kBAChD,MAAS3E,EAAO9E,OAGpBiG,QAAQC,IAAI,aAAciI,GAE1B,EAAKW,eAAeX,EAAUS,I,EAIlCE,eAAiB,SAACX,EAAUS,GACxB3I,QAAQC,IAAI,aAAciI,GAC1BlI,QAAQC,IAAI,YAAa0I,GAGzB,EAAKhE,uBAAuBpF,YAAW,SAASC,EAAKC,GAC9CD,EACC/B,MAAM,0BAGNmJ,IAAM,CACFuB,IAAKQ,EACL9B,OAAQ,OACRC,KAAMoB,EACNlB,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,qBAAsBmH,MACnCC,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,U,EAMrCsJ,mBAAqB,SAAC3E,GAClB,IAAMoE,EAAQ,EAAK5K,MAAMqG,QAAQwE,WAAU,SAAAtG,GACvC,OAAOA,EAAIQ,WAAayB,KAG5BnE,QAAQC,IAAI,UAAWsI,GACvBvI,QAAQC,IAAI,YAAakE,GAGzB,IAAMwE,EAAU9J,EAAO7E,WAAW+O,aAE5Bb,EAAW,CACbc,QAAS,EAAKrL,MAAMoG,OACpBrB,SAAUyB,EACV8E,aAAc,EAAKtL,MAAMqG,QAAQuE,GAAOU,aACxChH,eAAgB,EAAKtE,MAAMqG,QAAQuE,GAAOtG,eAC1C,MAASpD,EAAO9E,OAGpBiG,QAAQC,IAAI,aAAciI,GAC1BlI,QAAQC,IAAI,YAAa0I,GAEzB,EAAKE,eAAeX,EAAUS,GAG9B,IAAMO,EAAcC,YAAQ,EAAKxL,MAAMqG,SAAS,SAAAoF,GAC5CA,EAAMC,OAAOd,EAAO,MAGxB,EAAKzK,SAAS,CACVkG,QAASkF,K,EAKjBI,mBAAqB,SAACxM,EAAOqH,GACzBnE,QAAQC,IAAI,UAAWnD,GACvBkD,QAAQC,IAAI,YAAakE,GAGzB,IAAIoF,EAAkB,GACnBzM,IACCyM,EAAkBzM,EAAMH,KAAI,SAAA6M,GACxB,OAAOA,EAAI1M,UAInBkD,QAAQC,IAAI,kBAAmBsJ,GAE/B,IAAMhB,EAAQ,EAAK5K,MAAMqG,QAAQwE,WAAU,SAAAtG,GACvC,OAAOA,EAAIQ,WAAayB,KAItB+E,EAAcC,YAAQ,EAAKxL,MAAMqG,SAAS,SAAAoF,GAC5CA,EAAMb,GAAOjG,YAAciH,KAG/B,EAAKzL,SAAS,CACVkG,QAASkF,K,EAKjBO,8BAAgC,SAACzL,EAAImG,GACjCnG,EAAG0L,iBACH1J,QAAQC,IAAI,uBACZD,QAAQC,IAAI,YAAakE,GAEzB,IAEMwF,EAAkBC,IAASC,IAAIC,QAAQ,EAAKnM,MAAMoG,OAFrC,sBAGbgG,EAAmBH,IAASC,IAAIC,QAAQ3F,EAH3B,sBAKb6F,EAAY,CACd,OAAUL,EAAgBM,WAC1B,SAAYN,EAAgBM,WAC5B,QAAWF,EAAiBE,YAGhCC,aAAaC,QAAQ,gBAAiBrK,KAAKC,UAAUiK,IAGrDtK,OAAOC,SAAS3E,KAAO,iB,mFAtoBvBwM,SAAS4C,iBAAiB,YAAalK,KAAKoE,oBAmB5C,IAAM1F,EAAW,CACbzE,WAAY0E,EAAO3E,UAAUC,WAC7BC,SAAUyE,EAAO3E,UAAUE,UAI3BiQ,EADW,IAAItL,IAAgBH,GACRU,iBAI3B,GAFAU,QAAQC,IAAI,iBAAkBoK,GAEX,MAAfA,EAAqB,CAErBnK,KAAKpC,SAAS,CACVmG,aAAa,IAIjB,IAAMF,EAASsG,EAAYC,SAC3BpK,KAAKpC,SAAS,CACViG,OAAQA,IAIZ7D,KAAKyE,uBAAuBpF,WAAW,SAASC,EAAKC,GAAS,IAAD,OACzD,GAAGD,EACC/B,MAAM,8BAEN,CAEA,IAAM8M,EAAwB,CAC1B,OAAUxG,EACV,MAASlF,EAAO9E,OAGpB6M,IAAM,CACFuB,IAAKtJ,EAAO7E,WAAWwQ,oBACvB3D,OAAQ,OACRC,KAAMhH,KAAKC,UAAUwK,GACrBxD,YAAa,mBACbC,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GAGJ,GAFApH,QAAQC,IAAI,mCAAoCmH,GAE7CA,EAASN,KAAK2D,KACbzK,QAAQC,IAAI,wBAEZ,CACAD,QAAQC,IAAI,2BAIZ,IAAIyK,EAAmB,GACnBC,EAAY,KAC6B,OAA1CT,aAAaU,QAAQ,mBAEpBD,GADAD,EAAmB5K,KAAK+K,MAAMX,aAAaU,QAAQ,mBACtBD,WAGjC3K,QAAQC,IAAI,YAAayK,GACzB1K,QAAQC,IAAI,cAAe0K,GAE3B,IAAI3L,EAAW,CACX,OAAU+E,EACV,WAAcgC,KAAKC,MACnB,UAAa2E,EACb,MAAS9L,EAAO9E,OAGnB6M,IAAM,CACHuB,IAAKtJ,EAAO7E,WAAW8Q,wBACvBjE,OAAQ,OACRC,KAAM9H,EACN+H,YAAa,mBACbC,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,sCACZD,QAAQC,IAAI,WAAYmH,GAOxB8C,aAAaC,QAAQ,gBAAiBrK,KAAKC,UAJzB,CACd,UAAa,WAKlBsH,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,UAI9B6H,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,MAIzB,IAAMuL,EAAsB,CACxB,MAASlM,EAAO9E,OAGpB6M,IAAM,CACFuB,IAAKtJ,EAAO7E,WAAWgR,cACvBnE,OAAQ,OACRC,KAAMhH,KAAKC,UAAUgL,GACrBhE,YAAa,mBACbC,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,yBACZD,QAAQC,IAAI,aAAcmH,GAE1B,IAAM6D,EAAW,GACjBA,EAASC,WAAapL,KAAK+K,MAAMzD,EAASN,KAAKoE,YAC/CD,EAASE,MAAQrL,KAAK+K,MAAMzD,EAASN,KAAKqE,OAC1CF,EAASG,WAAatL,KAAK+K,MAAMzD,EAASN,KAAKsE,YAC/CH,EAASI,KAAOvL,KAAK+K,MAAMzD,EAASN,KAAKuE,MACzCJ,EAASK,SAAWxL,KAAK+K,MAAMzD,EAASN,KAAKwE,UAC7CtL,QAAQC,IAAI,aAAcgL,GAE1B,EAAKnN,SAAS,CACVmN,SAAUA,IAGd,IAAM/C,EAAW,CACb,QAAWnE,EACX,QAAW,EACX,MAASlF,EAAO9E,OAIjBgK,IAAWmE,EAASc,UACnBhJ,QAAQC,IAAI,sBACZ2G,IAAM,CACFuB,IAAKtJ,EAAO7E,WAAWuR,eACvB1E,OAAQ,OACRC,KAAMhH,KAAKC,UAAUmI,GACrBlB,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,uCACZD,QAAQC,IAAI,aAAcmH,GAE1B,IAAMpD,EAAUoD,EAASN,KAAK0E,gBAG3BxH,EAAQoB,SAGPpB,EAAQyH,MAAK,SAASC,EAAGC,GAAG,OAAOA,EAAEC,WAAaF,EAAEE,cAEpD,EAAK9N,SAAS,CACVkG,QAASA,EACTC,aAAa,IAGjBjE,QAAQC,IAAI,mBAAoB+D,OAWrCqD,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,UAK9B6H,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,QAI/BiD,KAAKvC,YAIPR,OAAOC,SAAS3E,KAAO,sB,6CAK3BwM,SAASqE,oBAAoB,YAAa3L,KAAKoE,sB,+BAgc1C,IAAD,OACJtE,QAAQC,IAAI,yBAA0BC,KAAKvC,OAE3C,IAAImO,EAAU,KACX5L,KAAKvC,MAAMsG,cACV6H,EAAU,yBAAKpR,UAAU,WACjB,kBAAC,IAAD,CACIW,KAAM0Q,IACNxQ,MAAM,UACNC,KAAK,KACLwQ,MAAI,MAIpB,IAAIC,EAAY,KA4BhB,OA3BG/L,KAAKvC,MAAMqG,QAAQoB,SAClB6G,EAAY/L,KAAKvC,MAAMqG,QAAQrH,KAAI,SAACuF,GAChC,OAAO,kBAAC,EAAD,CACCrF,IAAKqF,EAAIQ,SACTwJ,mBAAoBhK,EAAIgK,mBACxBxJ,SAAUR,EAAIQ,SACdyJ,cAAejK,EAAIiK,cACnBxJ,UAAWT,EAAIS,UACfG,YAAaZ,EAAIY,YACjBI,iBAAkBhB,EAAIgB,iBACtB9B,eAAgBc,EAAId,eACpBM,YAAaQ,EAAIR,YACjB0K,UAAWlK,EAAIkK,UACf9J,YAAaJ,EAAII,YACjBkB,kBAAmBtB,EAAIsB,kBACvBK,WAAY3B,EAAI2B,WAChB1I,QAAS,EAAK+I,eACdrC,UAAW,EAAKwG,eAAenG,EAAIQ,UACnCG,2BAA4B,EAAKyF,yBACjCtF,2BAA4B,EAAK0F,0BACjC9F,mBAAoB,EAAKkG,mBACzB7G,eAAgB,EAAKtE,MAAMsN,SAASE,MAAMlJ,eAC1CsB,aAAc,EAAK+F,mBACnB5F,yBAA0B,EAAK+F,oCAK3C,yBAAK/O,UAAU,WACX,iCACI,yBAAK2R,IAAK,SAAAC,GAAS,EAAK9H,WAAa8H,IACjC,kBAAC,EAAD,CACI7R,iBAAkByF,KAAKvC,MAAMlD,iBAC7BU,QAAS+E,KAAKrC,sBAGtB,yBAAK/C,MAAO,CAACuF,WAAW,WAExB,kBAAC,EAAD,CACIS,QAASZ,KAAK4E,mBACd/D,aAAcb,KAAKvC,MAAMoD,aACzBC,aAAcd,KAAKvC,MAAMqD,eAG5B8K,EAED,wBAAIO,IAAK,SAAAC,GAAS,EAAKC,OAASD,IAAhC,YAEA,uBAAGD,IAAK,SAAAC,GAAS,EAAK5H,MAAQ4H,IAA9B,aAECL,Q,GA3tBCvL,a,0BCsBP8L,G,OA3CF,SAAClS,GAIV,IAAImS,EAWJ,OAVAA,EAAUnS,EAAMkD,SAASb,KAAI,SAACuF,EAAKM,GAG/B,OAAO,4BACHxG,KAAK,SACLtB,UAAU,WACVmC,IAAK2F,EACLtH,QAASZ,EAAMa,QAAQsH,U,EAAWP,EAAI5H,MAAM4B,KAAMgG,EAAI5H,MAAM4B,OAIhE,yBAAKxB,UAAU,QACV+R,EAQAC,IAAMC,SAAShQ,IAAIrC,EAAMkD,UAAU,SAACoP,EAAOpK,GAIxC,GAAGlI,EAAMuS,YAAcD,EAAMtS,MAAM4B,GAC/B,OACI,yBAAKxB,UAAU,cACVkS,SC8xBdE,E,2MAjyBXC,eAAiBL,IAAMM,Y,EACvBC,UAAYP,IAAMM,Y,EAElBrP,MAAM,CACFoG,OAAQ,GACR+C,KAAM,GACN/F,aAAc,eACdC,aAAc,eACdiD,aAAa,EACbxJ,kBAAkB,EAClByJ,eAAgB,CACZC,QAAS,KACTC,QAAS,KACTC,SAAS,GAEbwI,UAAW,cACXK,aAAe,GACfC,aAAe,I,EA8KnB7I,mBAAqB,SAACC,GAEf,EAAKC,WAAWC,SAASF,EAAEtJ,SAI1B,EAAK6C,SAAS,CACVrD,kBAAkB,K,EAK9BkK,qBAAuB,WACnB,IAAM/F,EAAW,CACbzE,WAAY0E,EAAO3E,UAAUC,WAC7BC,SAAUyE,EAAO3E,UAAUE,UAI/B,OADe,IAAI2E,IAAgBH,GACnBU,kB,EAGpBsF,yCAA2C,SAACC,GAIxC,OAFe,EAAKlH,MAAMoG,QAEbc,G,EAQjBC,mBAAqB,SAAC9G,GAElB,GADAgC,QAAQC,IAAI,SAAUjC,EAAG/C,OAAOe,MAC7BgC,EAAG/C,OAAOe,MAA2B,SAAnBgC,EAAG/C,OAAOe,KAAgB,CAE3C,IACM+I,EADQ/G,EAAG/C,OAAO+J,mBACDC,UAEnBC,EAAW,GAaf,GAZGlH,EAAG/C,OAAOkK,OAASnH,EAAG/C,OAAOkK,MAAMC,OAAS,EAC3CF,GAAYlH,EAAG/C,OAAOoK,aAAa,0BAA4B,IAAIC,QAAQ,UAAWtH,EAAG/C,OAAOkK,MAAMC,SAGtGF,EAAWlH,EAAG/C,OAAO6B,MAAMyI,MAAM,MAAMC,MAEvCxF,QAAQC,IAAI,sBAAuBjC,EAAG/C,OAAOkK,MAAM,IACnDnF,QAAQC,IAAI,cAAejC,EAAG/C,OAAOkK,MAAM,GAAGlI,MAC9C+C,QAAQC,IAAI,cAAejC,EAAG/C,OAAOkK,MAAM,GAAGnJ,MAC9CgE,QAAQC,IAAI,cAAejC,EAAG/C,OAAOkK,MAAM,GAAG3J,KAAK,KAAK,KAAO,OAGhE0J,EAAS,CACR,IAAMO,EAAOzH,EAAG/C,OAAOgC,KAAM,EAC7B+C,QAAQC,IAAI,eAAgBwF,GAC5B,EAAK3H,SAAL,eAAiB2H,EAAOP,IAGxB,IAAMQ,EAAiB1H,EAAG/C,OAAOkK,MAAM,GAAGlI,KAAKsI,MAAM,KACjDI,EAAgBD,EAAcA,EAAcN,OAAQ,GACxDO,EAAgBA,EAAcC,cAC9B,IAAMC,EAAWlC,KAAKC,MAAM5F,EAAG/C,OAAOkK,MAAM,GAAG3J,KAAK,KAAK,MAEnDuI,EAAS,EAAKpG,MAAMoG,OAC1B/D,QAAQC,IAAI,cAAe0F,EAAgB,KAAME,GACjD7F,QAAQC,IAAI,qBAAsByF,EAAc,IAChD1F,QAAQC,IAAI,WAAY8D,GAExB,IAAI+B,EAAwB,KAU5B,GAToB,OAAjBH,GAA2C,OAAjBA,GAA2C,OAAjBA,GAA2C,OAAjBA,EAC7EG,GAAwB,EAIxBrI,MAAM,iEAIPqI,GAAyBD,EAAW,EAAE,CACrC7F,QAAQC,IAAI,6BAGZ,EAAKnC,SAAS,CACVmG,aAAa,IAKjB,IAAIjF,EAAW,CACX,OAAU+E,EACV,SAAY2B,EAAc,GAC1B,WAAcK,KAAKC,MACnB,MAASnH,EAAO9E,OAGdkM,EAAWjI,EAAG/C,OAAOkK,MAAM,GAEjCnF,QAAQC,IAAI,aAAcjB,GAE1B,IAAMkH,EAAI,gBAGV,SAA2BC,GACvB,IAAIC,EAAIH,EACJI,EAAS,IAAIC,WAEjBD,EAAOE,OACI,SAAShC,GAEZ,IAAIiC,EAAajC,EAAEtJ,OAAOoE,OAEtBoH,EAAe/G,OAAOgH,KAAKF,GAC/BxH,EAAS2H,UAAYF,EAErBzG,QAAQC,IAAI,iBAAkBwG,GAG9BzG,QAAQC,IAAI,OAAQiG,GACpBA,EAAKvB,uBAAuBpF,YAAW,SAASC,EAAKC,GAC9CD,EACC/B,MAAM,0BAKHyI,EAAKtB,yCAAyC5F,EAAS+E,SAErD6C,IAAM,CAEHC,OAAQ,OACRC,KAAMhH,KAAKC,UAAUf,GACrB+H,YAAa,mBACbC,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,qBAAsBmH,MAEnCC,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,UAU7C6G,EAAOiB,mBAAmBlB,GA7C9B,QAkDJ,CACA,IAAMjK,EAAQ6B,EAAG/C,OAAOgC,KAAM,EAC9B,EAAKa,SAAL,eAAgB3B,EAAO4I,O,EAKnCwC,QAAUC,SAASC,cAAc,S,EAEjCvD,eAAiB,SAACwD,EAAYC,GAS1B,GANA3H,QAAQC,IAAI,QACZD,QAAQC,IAAI,eAAgByH,GAC5B1H,QAAQC,IAAI,gBAAiB,EAAKtC,MAAMuG,eAAeC,SACvDnE,QAAQC,IAAI,eAAgB0H,GAGzB,EAAKhK,MAAMuG,eAAeC,UAAYuD,EAGrC,GAFA1H,QAAQC,IAAI,iBACZD,QAAQC,IAAI,QAAS,EAAKsH,QAAQK,QAC/B,EAAKL,QAAQK,OAAO,CACnB5H,QAAQC,IAAI,gBAEZ,EAAKsH,QAAQM,OAEb,IAAMC,EAAiB,eAAO,EAAKnK,MAAMuG,gBACzC4D,EAAkBzD,SAAU,EAC5B,EAAKvG,SAAS,CACXoG,eAAgB4D,QAGnB,CACA9H,QAAQC,IAAI,oBAEZ,EAAKsH,QAAQQ,QAEb,IAAMD,EAAiB,eAAO,EAAKnK,MAAMuG,gBACzC4D,EAAkBzD,SAAU,EAC5B,EAAKvG,SAAS,CACVoG,eAAgB4D,QAIxB,CAEC9H,QAAQC,IAAI,mBAEZ,IAAMiG,EAAI,eAIL8B,EAAOL,EAAWpC,MAAM1G,EAAO5E,OAAOgO,aAAa,GAEzDjI,QAAQC,IAAI,SAAU+H,GAEtB,IAAME,EAAW,CACbF,KAAMA,EACN,MAASnJ,EAAO9E,OAGpB,EAAK4K,uBAAuBpF,YAAW,SAASC,EAAKC,GAC9CD,EACC/B,MAAM,2BAINuC,QAAQC,IAAI,aAAciI,GAE1BtB,IAAM,CACFuB,IAAKtJ,EAAO7E,WAAWoO,aACvBvB,OAAQ,OACRC,KAAMhH,KAAKC,UAAUmI,GACrBlB,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,qBAAsBmH,GAIlClB,EAAKqB,QAAQ5M,IAAMyM,EAASN,KAC5BZ,EAAKqB,QAAQM,OAEb,IAAMC,EAAiB,eAAO5B,EAAKvI,MAAMuG,gBACzC4D,EAAkB3D,QAAUuD,EAC5BI,EAAkB1D,QAAUuD,EAC5BG,EAAkBzD,SAAU,EAE5B6B,EAAKpI,SAAS,CACVoG,eAAgB4D,OAGrBT,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,Y,EAOzC6I,eAAiB,SAAClE,GAId,OAHAnE,QAAQC,IAAI,YAAakE,GACzBnE,QAAQC,IAAI,kBAAmB,EAAKtC,MAAMuG,eAAeC,SACzDnE,QAAQC,IAAI,iBAAkB,EAAKtC,MAAMuG,eAAeG,SACrD,EAAK1G,MAAMuG,eAAeC,UAAYA,GAAW,EAAKxG,MAAMuG,eAAeG,QACnE,YAGA,Y,EAIfiE,yBAA2B,SAACtK,EAAImG,EAASnI,GACrC,IAAMkG,EAAMlE,EAAG/C,OAAO6B,MAGhByL,EAAQ,EAAK5K,MAAMqG,QAAQwE,WAAU,SAAAtG,GACvC,OAAOA,EAAIQ,WAAayB,KAItBsE,EAAW,eAAO,EAAK9K,MAAMqG,QAAQuE,IAE9B,gBAATvM,EACAyM,EAAYjF,kBAAoBtB,EAEnB,UAATlG,IACJyM,EAAY3F,YAAcZ,GAI9B,IAAM8B,EAAO,YAAO,EAAKrG,MAAMqG,SAC/BA,EAAQuE,GAASE,EAEjB,EAAK3K,SAAS,CACVkG,QAASA,K,EAKjB0E,0BAA4B,SAACvE,GAEzB,IAAMoE,EAAQ,EAAK5K,MAAMqG,QAAQwE,WAAU,SAAAtG,GACvC,OAAOA,EAAIQ,WAAayB,KAItBwE,EAAU9J,EAAO7E,WAAW4O,kBAE5BV,EAAW,CACb,QAAW,EAAKvK,MAAMoG,OACtB,SAAYI,EACZ,YAAe4B,KAAKC,MACpB,YAAe,EAAKrI,MAAMqG,QAAQuE,GAAOzF,YAGzC,kBAAsB,EAAKnF,MAAMqG,QAAQuE,GAAO/E,kBAChD,MAAS3E,EAAO9E,OAGpBiG,QAAQC,IAAI,aAAciI,GAE1B,EAAKW,eAAeX,EAAUS,I,EAIlCE,eAAiB,SAACX,EAAUS,GACxB3I,QAAQC,IAAI,aAAciI,GAC1BlI,QAAQC,IAAI,YAAa0I,GAGzB,EAAKhE,uBAAuBpF,YAAW,SAASC,EAAKC,GAC9CD,EACC/B,MAAM,0BAGNmJ,IAAM,CACFuB,IAAKQ,EACL9B,OAAQ,OACRC,KAAMoB,EACNlB,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,qBAAsBmH,MACnCC,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,U,EAOrC8J,mBAAqB,SAACxM,EAAOqH,GACzBnE,QAAQC,IAAI,UAAWnD,GACvBkD,QAAQC,IAAI,YAAakE,GAGzB,IAAIoF,EAAkB,GACnBzM,IACCyM,EAAkBzM,EAAMH,KAAI,SAAA6M,GACxB,OAAOA,EAAI1M,UAInBkD,QAAQC,IAAI,kBAAmBsJ,GAE/B,IAAMhB,EAAQ,EAAK5K,MAAMqG,QAAQwE,WAAU,SAAAtG,GACvC,OAAOA,EAAIQ,WAAayB,KAItB+E,EAAcC,YAAQ,EAAKxL,MAAMqG,SAAS,SAAAoF,GAC5CA,EAAMb,GAAOjG,YAAciH,KAG/B,EAAKzL,SAAS,CACVkG,QAASkF,K,EAKjBkE,iBAAmB,SAACnQ,GAChB+C,QAAQC,IAAI,OAAQhD,GACpB,EAAKa,SAAS,CAAC+O,UAAW5P,K,EAG9BoQ,SAAW,WACPrN,QAAQC,IAAI,c,EAGhBqN,qBAAuB,SAACJ,EAAcC,GAKlC,IADA,IAAMI,EAAwB,GACtB/K,EAAE,EAAGA,EAAE2K,EAAa/H,OAAQ5C,IAC7B2K,EAAa3K,GAAK,IACjB+K,EAAsBnL,KAAK,2BAEvB+K,EAAa3K,GACjB+K,EAAsBnL,KAAK,2BASnC,IADA,IAAMoL,EAAe,GACbhL,EAAE,EAAGA,EAAE2K,EAAa/H,OAAQ5C,IAC7B2K,EAAa3K,GAAK,EACjBgL,EAAapL,KAAK,OAGlBoL,EAAapL,KAAK,SAK1B,IAAMqL,EAAoB,EAAKV,eAAeW,QAAQC,WAAW,MAEjE,IAAIC,IAAMH,EAAmB,CACzBzR,KAAM,MACN8K,KAAM,CACF+G,OAAQX,EACRY,SAAU,CAAC,CACP3R,MAAO,QACP2K,KAAMqG,EACNY,gBAAiBR,EAKjBS,YAAa,KAGrBtR,QAAS,CAELuR,qBAAqB,EACrBC,OAAQ,CACJC,MAAO,CAAC,CACJC,UAAW,CACP5T,SAAS,GAEb6T,MAAO,CACH7T,SAAS,EACT8T,UAAW,QACXC,KAAM,IACNC,IAAK,IACLC,SAAU,SAASvM,EAAKqG,EAAOmG,GAC3B,OAAOxM,EAAM,QAIzByM,MAAO,CAAC,CACJP,UAAW,CACP5T,SAAS,GAEboU,WAAY,CACRpU,SAAS,EACTqU,YAAa,WAEjBR,MAAO,CACH7T,SAAS,EACTsU,aAAa,EACbR,UAAW,QACXG,SAAU,SAASvM,EAAKqG,EAAOmG,GAC3B,OAAOxM,EAAM,SAK7B6M,OAAQ,CACJvU,SAAS,GAEbwU,QAAS,CACLC,WAAY,CACR1T,MAAO,OACP2T,MAAO,SACPC,OAAQ3B,EACR4B,UAAW,SAAStS,EAAOuS,GAGvB,MAAO,SAQ3B,IAAMpC,EAAY,EAAKA,UAAUS,QAAQC,WAAW,MAEpD,IAAIC,IAAMX,EAAW,CACjBjR,KAAM,OACN8K,KAAM,CAEF+G,OAAQ,CAAC,MAAO,MAAO,SACvBC,SAAU,CACN,CACI3R,MAAO,QACP2K,KAAM,CAAC,GAAI,GAAI,OAI3BpK,QAAS,M,EAOjBmB,mBAAqB,WACjB,EAAKC,SAAS,CACVrD,kBAAmB,EAAKkD,MAAMlD,oB,EAItC6U,mBAAqB,WACjB,EAAKxR,SAAS,CACVoP,aAAc,CAAC,MAAO,MAAO,SAC7BC,aAAc,CAAC,GAAG,GAAG,O,mFA1pBzB3F,SAAS4C,iBAAiB,YAAalK,KAAKoE,oBAE5C,IAAM1F,EAAW,CACbzE,WAAY0E,EAAO3E,UAAUC,WAC7BC,SAAUyE,EAAO3E,UAAUE,UAI3BiQ,EADW,IAAItL,IAAgBH,GACRU,iBAI3B,GAFAU,QAAQC,IAAI,iBAAkBoK,GAEX,MAAfA,EAAqB,CAGrB,IAAMtG,EAASsG,EAAYC,SAC3BpK,KAAKpC,SAAS,CACViG,OAAQA,IAIZ7D,KAAKyE,uBAAuBpF,WAAW,SAASC,EAAKC,GAAS,IAAD,OACzD,GAAGD,EACC/B,MAAM,8BAEN,CAEA,IAAMsN,EAAsB,CACxB,MAASlM,EAAO9E,OAGpB6M,IAAM,CACFuB,IAAKtJ,EAAO7E,WAAWgR,cACvBnE,OAAQ,OACRC,KAAMhH,KAAKC,UAAUgL,GACrBhE,YAAa,mBACbC,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,yBACZD,QAAQC,IAAI,aAAcmH,GAE1B,IAAM6D,EAAW,GAajB,GAZAA,EAASC,WAAapL,KAAK+K,MAAMzD,EAASN,KAAKoE,YAC/CD,EAASE,MAAQrL,KAAK+K,MAAMzD,EAASN,KAAKqE,OAC1CF,EAASG,WAAatL,KAAK+K,MAAMzD,EAASN,KAAKsE,YAC/CH,EAASI,KAAOvL,KAAK+K,MAAMzD,EAASN,KAAKuE,MACzCJ,EAASK,SAAWxL,KAAK+K,MAAMzD,EAASN,KAAKwE,UAC7CtL,QAAQC,IAAI,aAAcgL,GAE1B,EAAKnN,SAAS,CACVmN,SAAUA,IAI+B,OAA1Cf,aAAaU,QAAQ,iBAA0B,CAC9C,IAAMF,EAAmB5K,KAAK+K,MAAMX,aAAaU,QAAQ,kBAInD2E,EAAc3F,IAASC,IAAI2F,QAAQ9E,EAAiB3G,OADvC,sBAEb0L,EAAgB7F,IAASC,IAAI2F,QAAQ9E,EAAiBgF,SAFzC,sBAGbC,EAAe/F,IAASC,IAAI2F,QAAQ9E,EAAiBvG,QAHxC,sBAQb+D,EAAW,CACbc,QALoBuG,EAAYtF,SAASL,IAASgG,IAAIC,MAMtDC,gBALsBL,EAAcxF,SAASL,IAASgG,IAAIC,MAM1DnN,SALqBiN,EAAa1F,SAASL,IAASgG,IAAIC,MAMxD9V,MAAO8E,EAAO9E,OAGlBiG,QAAQC,IAAI,aAAciI,GAG1B,IAAI6H,EAAmB,GAEpB7H,EAASc,SAAWd,EAAS4H,kBAC5BC,GAAmB,GAGvB/P,QAAQC,IAAI,qBAAsB8P,GAElC/P,QAAQC,IAAI,wBAAyBiI,GAGlC,EAAKtD,yCAAyCsD,EAASc,UAEtDpC,IAAM,CACFuB,IAAKtJ,EAAO7E,WAAWgW,sBACvBnJ,OAAQ,OACRC,KAAMoB,EACNlB,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,qBAAsBmH,EAASN,MAC3C9G,QAAQC,IAAI,oBAAqBH,KAAK+K,MAAMzD,EAASN,OAErD,IAAMA,EAAOhH,KAAK+K,MAAMzD,EAASN,MACjC,EAAKhJ,SAAS,CACVgJ,KAAMA,IAQV,IAHA,IAAMoG,EAAe,GACfC,EAAerG,EAAKmJ,OAElBzN,EAAE,EAAGA,EAAEsE,EAAKoJ,WAAW9K,OAAQ5C,IACnC0K,EAAa9K,KAAK0E,EAAKoJ,WAAW1N,GAAG2N,QAAQ,IAGjD,EAAKrS,SAAS,CACVoP,aAAcA,EACdC,aAAcA,IAGlB,EAAKG,qBAAqBJ,EAAcC,MAEzC9F,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,UAIlC6H,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,QAI/BiD,KAAKvC,YAIPR,OAAOC,SAAS3E,KAAO,sB,2CAMC,gBAAzBkF,KAAKvC,MAAMkP,WAMV3M,KAAKoN,qBAAqBpN,KAAKvC,MAAMuP,aAAchN,KAAKvC,MAAMwP,gB,6CAKlE3F,SAASqE,oBAAoB,YAAa3L,KAAKoE,sB,+BAygB1C,IAAD,OACJtE,QAAQC,IAAI,yBAA0BC,KAAKvC,OAE3C,IAAImO,EAAU,KAYd,OAXG5L,KAAKvC,MAAMsG,cACV6H,EAAU,yBAAKpR,UAAU,WACjB,kBAAC,IAAD,CACIW,KAAM0Q,IACNxQ,MAAM,UACNC,KAAK,KACLwQ,MAAI,MAMhB,yBAAKtR,UAAU,eACX,iCACI,yBAAK2R,IAAK,SAAAC,GAAS,EAAK9H,WAAa8H,IACjC,kBAAC,EAAD,CACI7R,iBAAkByF,KAAKvC,MAAMlD,iBAC7BU,QAAS+E,KAAKrC,sBAItB,yBAAK/C,MAAO,CAACuF,WAAW,WAExB,kBAAC,EAAD,CACIS,QAASZ,KAAK4E,mBACd/D,aAAcb,KAAKvC,MAAMoD,aACzBC,aAAcd,KAAKvC,MAAMqD,eAE5B8K,EAED,4BAAK5L,KAAKvC,MAAMmJ,KAAKhE,aAGrB,kBAAC,EAAD,CACI+J,UAAW3M,KAAKvC,MAAMkP,UACtB1R,QAAS+E,KAAKkN,kBAGd,yBAAKlR,GAAG,cAAcxB,UAAU,cAC5B,0CACA,4CAEA,yBAAKI,MAAO,CAACsV,UAAU,SACnB,yBAAKtV,MAAO,CAACC,MAAM,QAAUsV,OAAO,UAChC,4BACInU,GAAG,iBACHmQ,IAAKnM,KAAK6M,mBAKtB,4BAAQ/Q,KAAK,SAASd,QAASgF,KAAKoP,oBAApC,gBAEA,yBAAKxU,MAAO,CAACsV,UAAU,SACnB,yBAAKtV,MAAO,CAACC,MAAM,QAAUsV,OAAO,UAChC,4BACInU,GAAG,iBACHmQ,IAAKnM,KAAK+M,cAKtB,6DAIJ,yBAAK/Q,GAAG,cAAcxB,UAAU,cAC5B,0CACA,0CAGJ,yBAAKwB,GAAG,cAAcxB,UAAU,cAC5B,0CACA,8C,GAxxBFgG,aCsbX4P,G,kNAvbX3S,MAAM,CACFoG,OAAQ,GACRC,QAAS,GACTjD,aAAc,eACdC,aAAc,eACdiD,aAAa,EACbxJ,kBAAkB,EAClByJ,eAAgB,CACZC,QAAS,KACTC,QAAS,KACTC,SAAS,I,EAyFjBC,mBAAqB,SAACC,GAEf,EAAKC,WAAWC,SAASF,EAAEtJ,UAI1B+E,QAAQC,IAAI,kBACZ,EAAKnC,SAAS,CACVrD,kBAAkB,M,EAK9BkK,qBAAuB,WACnB,IAAM/F,EAAW,CACbzE,WAAY0E,EAAO3E,UAAUC,WAC7BC,SAAUyE,EAAO3E,UAAUE,UAI/B,OADe,IAAI2E,IAAgBH,GACnBU,kB,EAGpBsF,yCAA2C,SAACC,GAIxC,OAFe,EAAKlH,MAAMoG,QAEbc,G,EAQjBhH,mBAAqB,WACjB,EAAKC,SAAS,CACVrD,kBAAmB,EAAKkD,MAAMlD,oB,EAItCqK,mBAAqB,SAAC9G,GAElB,GADAgC,QAAQC,IAAI,SAAUjC,EAAG/C,OAAOe,MAC7BgC,EAAG/C,OAAOe,MAA2B,SAAnBgC,EAAG/C,OAAOe,KAAgB,CAE3C,IACM+I,EADQ/G,EAAG/C,OAAO+J,mBACDC,UAEnBC,EAAW,GAaf,GAZGlH,EAAG/C,OAAOkK,OAASnH,EAAG/C,OAAOkK,MAAMC,OAAS,EAC3CF,GAAYlH,EAAG/C,OAAOoK,aAAa,0BAA4B,IAAIC,QAAQ,UAAWtH,EAAG/C,OAAOkK,MAAMC,SAGtGF,EAAWlH,EAAG/C,OAAO6B,MAAMyI,MAAM,MAAMC,MAEvCxF,QAAQC,IAAI,sBAAuBjC,EAAG/C,OAAOkK,MAAM,IACnDnF,QAAQC,IAAI,cAAejC,EAAG/C,OAAOkK,MAAM,GAAGlI,MAC9C+C,QAAQC,IAAI,cAAejC,EAAG/C,OAAOkK,MAAM,GAAGnJ,MAC9CgE,QAAQC,IAAI,cAAejC,EAAG/C,OAAOkK,MAAM,GAAG3J,KAAK,KAAK,KAAO,OAGhE0J,EAAS,CACR,IAAMO,EAAOzH,EAAG/C,OAAOgC,KAAM,EAC7B+C,QAAQC,IAAI,eAAgBwF,GAC5B,EAAK3H,SAAL,eAAiB2H,EAAOP,IAGxB,IAAMQ,EAAiB1H,EAAG/C,OAAOkK,MAAM,GAAGlI,KAAKsI,MAAM,KACjDI,EAAgBD,EAAcA,EAAcN,OAAQ,GACxDO,EAAgBA,EAAcC,cAC9B,IAAMC,EAAWlC,KAAKC,MAAM5F,EAAG/C,OAAOkK,MAAM,GAAG3J,KAAK,KAAK,MAEnDuI,EAAS,EAAKpG,MAAMoG,OAC1B/D,QAAQC,IAAI,cAAe0F,EAAgB,KAAME,GACjD7F,QAAQC,IAAI,qBAAsByF,EAAc,IAChD1F,QAAQC,IAAI,WAAY8D,GAExB,IAAI+B,EAAwB,KAU5B,GAToB,OAAjBH,GAA2C,OAAjBA,GAA2C,OAAjBA,GAA2C,OAAjBA,EAC7EG,GAAwB,EAIxBrI,MAAM,iEAIPqI,GAAyBD,EAAW,EAAE,CACrC7F,QAAQC,IAAI,6BAGZ,EAAKnC,SAAS,CACVmG,aAAa,IAKjB,IAAIjF,EAAW,CACX,OAAU+E,EACV,SAAY2B,EAAc,GAC1B,WAAcK,KAAKC,MACnB,MAASnH,EAAO9E,OAGdkM,EAAWjI,EAAG/C,OAAOkK,MAAM,GAEjCnF,QAAQC,IAAI,aAAcjB,GAE1B,IAAMkH,EAAI,gBAGV,SAA2BC,GACvB,IAAIC,EAAIH,EACJI,EAAS,IAAIC,WAEjBD,EAAOE,OACI,SAAShC,GAEZ,IAAIiC,EAAajC,EAAEtJ,OAAOoE,OAEtBoH,EAAe/G,OAAOgH,KAAKF,GAC/BxH,EAAS2H,UAAYF,EAErBzG,QAAQC,IAAI,iBAAkBwG,GAG9BzG,QAAQC,IAAI,OAAQiG,GACpBA,EAAKvB,uBAAuBpF,YAAW,SAASC,EAAKC,GAC9CD,EACC/B,MAAM,0BAKHyI,EAAKtB,yCAAyC5F,EAAS+E,SAErD6C,IAAM,CAEHC,OAAQ,OACRC,KAAMhH,KAAKC,UAAUf,GACrB+H,YAAa,mBACbC,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,qBAAsBmH,MAEnCC,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,UAU7C6G,EAAOiB,mBAAmBlB,GA7C9B,QAkDJ,CACA,IAAMjK,EAAQ6B,EAAG/C,OAAOgC,KAAM,EAC9B,EAAKa,SAAL,eAAgB3B,EAAO4I,O,EAKnCwC,QAAUC,SAASC,cAAc,S,EAEjCvD,eAAiB,SAACwD,EAAYC,GAS1B,GANA3H,QAAQC,IAAI,QACZD,QAAQC,IAAI,eAAgByH,GAC5B1H,QAAQC,IAAI,gBAAiB,EAAKtC,MAAMuG,eAAeC,SACvDnE,QAAQC,IAAI,eAAgB0H,GAGzB,EAAKhK,MAAMuG,eAAeC,UAAYuD,EAGrC,GAFA1H,QAAQC,IAAI,iBACZD,QAAQC,IAAI,QAAS,EAAKsH,QAAQK,QAC/B,EAAKL,QAAQK,OAAO,CACnB5H,QAAQC,IAAI,gBAEZ,EAAKsH,QAAQM,OAEb,IAAMC,EAAiB,eAAO,EAAKnK,MAAMuG,gBACzC4D,EAAkBzD,SAAU,EAC5B,EAAKvG,SAAS,CACXoG,eAAgB4D,QAGnB,CACA9H,QAAQC,IAAI,oBAEZ,EAAKsH,QAAQQ,QAEb,IAAMD,EAAiB,eAAO,EAAKnK,MAAMuG,gBACzC4D,EAAkBzD,SAAU,EAC5B,EAAKvG,SAAS,CACVoG,eAAgB4D,QAIxB,CAEC9H,QAAQC,IAAI,mBAEZ,IAAMiG,EAAI,eAIL8B,EAAOL,EAAWpC,MAAM1G,EAAO5E,OAAOgO,aAAa,GAEzDjI,QAAQC,IAAI,SAAU+H,GAEtB,IAAME,EAAW,CACbF,KAAMA,EACN,MAASnJ,EAAO9E,OAGpB,EAAK4K,uBAAuBpF,YAAW,SAASC,EAAKC,GAC9CD,EACC/B,MAAM,2BAINuC,QAAQC,IAAI,aAAciI,GAE1BtB,IAAM,CACFuB,IAAKtJ,EAAO7E,WAAWoO,aACvBvB,OAAQ,OACRC,KAAMhH,KAAKC,UAAUmI,GACrBlB,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,qBAAsBmH,GAIlClB,EAAKqB,QAAQ5M,IAAMyM,EAASN,KAC5BZ,EAAKqB,QAAQM,OAEb,IAAMC,EAAiB,eAAO5B,EAAKvI,MAAMuG,gBACzC4D,EAAkB3D,QAAUuD,EAC5BI,EAAkB1D,QAAUuD,EAC5BG,EAAkBzD,SAAU,EAE5B6B,EAAKpI,SAAS,CACVoG,eAAgB4D,OAGrBT,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,Y,EAOzC6I,eAAiB,SAAClE,GAId,OAHAnE,QAAQC,IAAI,YAAakE,GACzBnE,QAAQC,IAAI,kBAAmB,EAAKtC,MAAMuG,eAAeC,SACzDnE,QAAQC,IAAI,iBAAkB,EAAKtC,MAAMuG,eAAeG,SACrD,EAAK1G,MAAMuG,eAAeC,UAAYA,GAAW,EAAKxG,MAAMuG,eAAeG,QACnE,YAGA,Y,EAMfoF,8BAAgC,SAACzL,EAAImG,GACjCnG,EAAG0L,iBACH1J,QAAQC,IAAI,uBACZD,QAAQC,IAAI,YAAakE,GAEzB,IAEMwF,EAAkBC,IAASC,IAAIC,QAAQ,EAAKnM,MAAMoG,OAFrC,sBAGbgG,EAAmBH,IAASC,IAAIC,QAAQ3F,EAH3B,sBAKb6F,EAAY,CACd,OAAUL,EAAgBM,WAC1B,SAAYN,EAAgBM,WAC5B,QAAWF,EAAiBE,YAGhCC,aAAaC,QAAQ,gBAAiBrK,KAAKC,UAAUiK,IAGrDtK,OAAOC,SAAS3E,KAAO,iB,mFAzXvBwM,SAAS4C,iBAAiB,YAAalK,KAAKoE,oBAmB5C,IAAM1F,EAAW,CACbzE,WAAY0E,EAAO3E,UAAUC,WAC7BC,SAAUyE,EAAO3E,UAAUE,UAI3BiQ,EADW,IAAItL,IAAgBH,GACRU,iBAI3B,GAFAU,QAAQC,IAAI,iBAAkBoK,GAEX,MAAfA,EAAqB,CAErBnK,KAAKpC,SAAS,CACVmG,aAAa,IAIjB,IAAMF,EAASsG,EAAYC,SAC3BpK,KAAKpC,SAAS,CACViG,OAAQA,IAIZ7D,KAAKyE,uBAAuBpF,WAAW,SAASC,EAAKC,GAAS,IAAD,OACzD,GAAGD,EACC/B,MAAM,8BAEN,CACA,IAAMyK,EAAW,CAEb,eAAkB,OAClB,MAASrJ,EAAO9E,OAGpB6M,IAAM,CACFuB,IAAKtJ,EAAO7E,WAAWuW,kBACvB1J,OAAQ,OACRC,KAAMoB,EACNlB,QAAS,CAAC,cAAiBvH,EAAQwH,aAAaC,iBACjDC,MAAK,SAAAC,GACJpH,QAAQC,IAAI,uCACZD,QAAQC,IAAI,WAAYmH,GAExB,EAAKtJ,SAAS,CACVgJ,KAAMM,EAASN,KACf7C,aAAa,OAGlBoD,OAAM,SAAA7H,GACLQ,QAAQC,IAAI,QAAST,QAI/BiD,KAAKvC,YAIPR,OAAOC,SAAS3E,KAAO,sB,6CAK3BwM,SAASqE,oBAAoB,YAAa3L,KAAKoE,sB,+BA4S1C,IAAD,OACJtE,QAAQC,IAAI,yBAA0BC,KAAKvC,OAE3C,IAAImO,EAAU,KAad,OAZG5L,KAAKvC,MAAMsG,cACV6H,EAAU,yBAAKpR,UAAU,WACjB,kBAAC,IAAD,CACIW,KAAM0Q,IACNxQ,MAAM,UACNC,KAAK,KACLwQ,MAAI,MAOhB,yBAAKtR,UAAU,WACX,iCACA,yBAAK2R,IAAK,SAAAC,GAAS,EAAK9H,WAAa8H,IACjC,kBAAC,EAAD,CACI7R,iBAAkByF,KAAKvC,MAAMlD,iBAC7BU,QAAS+E,KAAKrC,sBAGtB,yBAAK/C,MAAO,CAACuF,WAAW,WAExB,kBAAC,EAAD,CACIS,QAASZ,KAAK4E,mBACd/D,aAAcb,KAAKvC,MAAMoD,aACzBC,aAAcd,KAAKvC,MAAMqD,eAG7B,uCAEC8K,Q,GAhbKpL,cCGP8P,E,iLAdX,OACI,kBAAC,IAAD,KACI,yBAAK9V,UAAU,OACf,kBAAC,IAAD,CAAOsN,KAAK,IAAIyI,OAAK,EAACC,UAAWhT,IACjC,kBAAC,IAAD,CAAOsK,KAAK,UAAUyI,OAAK,EAACC,UAAW/P,IACvC,kBAAC,IAAD,CAAOqH,KAAK,YAAYyI,OAAK,EAACC,UAAW5M,IACzC,kBAAC,IAAD,CAAOkE,KAAK,eAAeyI,OAAK,EAACC,UAAW5D,IAC5C,kBAAC,IAAD,CAAO9E,KAAK,WAAWyI,OAAK,EAACC,UAAWJ,U,GAVlC5P,aCEEiQ,QACW,cAA7BjR,OAAOC,SAASiR,UAEe,UAA7BlR,OAAOC,SAASiR,UAEhBlR,OAAOC,SAASiR,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASvJ,SAASwJ,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhK,MAAK,SAAAiK,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC","file":"static/js/main.4df30496.chunk.js","sourcesContent":["const configStage = 'test';\r\n\r\nexport default {\r\n    stage: configStage,\r\n    apiGateway: {\r\n        // login page=========================================================\r\n        'checkfirsttimelogin' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/checkfirsttimelogin',\r\n        // my-music page======================================================\r\n        // fetch existing music list for my-music\r\n        'get_music_list' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/get-music-list',\r\n        // Jin's API \r\n        'uploadfile' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/uploadfile',\r\n        // Jin's API\r\n        'downloadfile' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/downloadfile',\r\n        // \r\n        'update_music_info' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/update-music-info',\r\n        // \r\n        'delete_music' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/delete-music',\r\n        // hear beat\r\n        'check_diagnostics_complete' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/check-diagnostics-complete',\r\n        // \r\n        'get_genre_etc': 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/get-genre-etc',\r\n        // save user to user table\r\n        'save_user_to_user_table': 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/save-user-to-user-table',\r\n    \r\n        // diagnostics page===================================================\r\n        // \r\n        'get_music_diagnostics' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/get-music-diagnostics',\r\n        // Jin's API\r\n        'uploadcoverimage' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/uploadcoverimage',\r\n        // publish to library\r\n        'publish_to_library' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/publish-to-library',\r\n        // check user display name availability\r\n        'backend_name_check' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/backend-name-check',\r\n        \r\n        // intro page==========================================================\r\n        // Jin's API\r\n        'uploadfile_first_time' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/uploadfile-first-time',\r\n        \r\n        // library page=========================================================\r\n        'get_music_library' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/get-music-library',\r\n        // get total likes\r\n        'total_likes' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/total-likes',\r\n        // toggle likes\r\n        'put_music_like' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/put-music-like',\r\n        'delete_music_like' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/delete-music-like',\r\n\r\n        // Profile page==========================================================\r\n        'get_user_profile' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/get-user-profile',\r\n        'update_user_profile': 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/update-user-profile',\r\n        'profile_image_upload': 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/profile-image-upload',\r\n        'backend_name_check' : 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/-backend-name-check',\r\n        \r\n        'backend_unpublish_from_library': 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/backend-unpublish-from-library',\r\n        'backend_edit_published_notes': 'https://asa8ggh6ie.execute-api.us-east-1.amazonaws.com/' + configStage + '/backend-edit-published-notes',\r\n    },\r\n    bucket: {\r\n        // bucket path=======================================================\r\n        'musicBucket' : 'https://s3.amazonaws.com/' + configStage + '.kena.ai.music/',\r\n    },\r\n    pool_data: {\r\n        UserPoolId: 'us-east-1_Dr5cy3Pfm', // Your user pool id here\r\n        ClientId: '41141jgjj72rot3j3a4a6fu4jo', // Your client id here\r\n    }\r\n}","import React from 'react';\r\nimport './Navbar.css';\r\nimport kenaLogo from '../../assets/logo.png';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst navbar = (props) =>{\r\n\r\n    let mobileNavbarStyle = {\r\n        display: 'none'\r\n    }\r\n    if(props.showMobileNavbar){\r\n        mobileNavbarStyle.display = 'block'\r\n    }\r\n\r\n    return (\r\n        <div className='Navbar'>\r\n            {/* desktop nav menu */}\r\n            <div className='nav desktopNavContainer disp-flex align-items--center hide-tablet justify-content--spaceBetween'>\r\n                <img src={kenaLogo} alt=\"logo\" style={{width:100+'px'}}/>\r\n            <div>\r\n                <a href=\"https://www.kena.ai/\" target=\"_blank\">Home</a>\r\n                <a href=\"https://www.kena.ai/press\" target=\"_blank\">Press</a>\r\n                <a href=\"https://www.kena.ai/jobs\" target=\"_blank\">Jobs</a>\r\n                <a href=\"https://www.kena.ai/culture\" target=\"_blank\">Culture</a>\r\n                <a href=\"https://www.kena.ai/blog\" target=\"_blank\">Blog</a>\r\n                <a href=\"#\" className='logoutButton'>Logout</a>\r\n            </div>\r\n\r\n            </div>\r\n\r\n            {/* mobile nav menu */}\r\n            <div className='nav mobileNavContainer disp-flex align-items--center show-tablet-flex justify-content--end'>\r\n                <div className=\"myNavLinks\" style={mobileNavbarStyle}>\r\n                    <a href=\"https://www.kena.ai/\">Home</a>\r\n                    <a href=\"./diagnostics\" className='diagnosticsLink'>Workstation</a>\r\n                    <a href=\"./my-music\" className='myMusicLink'>My Music</a>\r\n                    <a href=\"./library\" className='libraryLink'>Library</a>\r\n                    <a href=\"./profile\" className='profileLink'>Profile</a>\r\n                    <a href=\"#\" className='logoutButton'>Logout</a>\r\n                </div>\r\n                <a onClick={props.clicked} href=\"#\" className='navHamburgerIcon' aria-label=\"click to open mobile navigation menu\">\r\n                    <FontAwesomeIcon\r\n                        icon={faBars}\r\n                        color='black'\r\n                        size='1x'/>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navbar;","import React from 'react';\r\nimport './Input.css';\r\n\r\nconst input = (props) =>{\r\n    let labelElement = null;\r\n    let inputElement = null;\r\n    let styleLabel = 'styleLabel';\r\n    let styleLabelForCheckbox = 'checkBoxContainer';\r\n\r\n    if(props.req){\r\n        styleLabel += ' req';\r\n        styleLabelForCheckbox += ' req';\r\n    }\r\n\r\n    if(props.inputtype === 'input' && props.type === 'text'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <input className='inputText' {...props}/>;\r\n    }\r\n\r\n    else if(props.inputtype === 'input' && props.type === 'password'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <input className='inputText' {...props}/>;\r\n    }\r\n    else if(props.inputtype === 'textarea'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <textarea className='inputText' {...props}/>;\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'file'){\r\n        // labelElement =  <label htmlFor={props.id}>{props.label}</label>;\r\n        // inputElement = <input className='' {...props}/>\r\n        let fileLabelSpan = props.filelabelspan;\r\n        let fileLabel = props.filelabel;\r\n        let spanText = props.label;\r\n        if(props.filelabelspan){\r\n            spanText = null;\r\n            fileLabel = null;\r\n        }\r\n        else if(props.filelabel){\r\n            spanText = null;\r\n            fileLabelSpan = null;\r\n        }\r\n        inputElement = <div>\r\n                        <input {...props} className=\"inputfile\"\r\n                               data-multiple-caption=\"{count} files selected\"/>\r\n                        <label htmlFor={props.id}><span>{fileLabelSpan}{fileLabel}{spanText}</span></label>\r\n                    </div>\r\n    }\r\n    else if(props.inputtype === 'select'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <select className='inputSelect' {...props}>\r\n            {props.options.map(option=>{\r\n                return <option key={option.value} value={option.value}>{option.displayValue}</option>;\r\n            })}\r\n        </select>\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'radio'){\r\n        // inputElement = props.options.map(option=>{\r\n        //     return <label key={option.value} htmlFor={option.id}>\r\n        //             <input className='' {...props} value={option.value} id={option.id} name={props.name} checked={option.value === props.selected}/>{option.label}\r\n        //         </label>;\r\n        // })\r\n        inputElement = <div className='disp-flex'>\r\n                        {props.options.map(option=>{\r\n                            return <React.Fragment key={option.id}>\r\n                                <input {...props} type={props.type} className=\"buttonLikeRadio buttonLikeRadio-insurance_y_n\" id={option.id} name={props.name} value={option.value} checked={option.value === props.selected}/>\r\n                                <label className=\"round-border width100\" htmlFor={option.id}>{option.label}</label>\r\n                            </React.Fragment>\r\n                        })}\r\n                    </div>\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'checkbox'){\r\n        // inputElement = <label>\r\n        //                 <input className='' {...props}/>{props.label}\r\n        //             </label>;\r\n        inputElement = <div>\r\n                        <label className={styleLabelForCheckbox} htmlFor={props.name}>{props.label}\r\n                        <input {...props} checked={!!props.ischecked}/>\r\n                                <span className=\"checkmark\"></span>\r\n                        </label>\r\n                    </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Input'>\r\n            {labelElement}\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst button = (props) =>{\r\n\r\n    let btnClass = '';\r\n    if(props.color === 'primary'){\r\n        btnClass='btn btn-primary';\r\n    }\r\n    else if(props.color === 'danger'){\r\n        btnClass = 'btn danger';\r\n    }\r\n    else{\r\n        btnClass = 'btn';\r\n    }\r\n\r\n    return(\r\n        <div className='Button'>\r\n            <button disabled={props.disabled} className={btnClass} {...props}>{props.children}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport './Alert.css';\r\n\r\nconst alert = (props) =>{\r\n\r\n    let btnClass = '';\r\n    if(props.color === 'warning'){\r\n        btnClass='Alert warning';\r\n    }\r\n    else if(props.color === 'danger'){\r\n        btnClass = 'Alert danger';\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='Alert'>\r\n            <div className={btnClass}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default alert;","import React, {Component} from 'react';\r\nimport './Login.css';\r\nimport kenaLogo from '../../assets/logo.png';\r\nimport config from '../../config';\r\nimport { \r\n    CognitoUserPool, \r\n    AuthenticationDetails, \r\n    CognitoUser,\r\n    CognitoUserSession,\r\n    CognitoUserAttribute\r\n} from 'amazon-cognito-identity-js';\r\nimport bgImage from '../../assets/bg2.png';\r\n\r\nimport Navbar from '../../componentes/Navbar/Navbar';\r\nimport Input from '../../componentes/Input/Input';\r\nimport Button from '../../componentes/Button/Button';\r\nimport Alert from '../../componentes/Alert/Alert';\r\n\r\nclass Login extends Component{\r\n    state={\r\n      showMobileNavbar: false,\r\n      loginErrorMessage: '',\r\n      'loginEmail': '',\r\n      'loginPassword': '',\r\n    }\r\n\r\n    componentDidMount(){\r\n       \r\n    }\r\n\r\n    toggleMobileNavbar = () =>{\r\n        this.setState({\r\n            showMobileNavbar: !this.state.showMobileNavbar\r\n        });\r\n    }\r\n\r\n    inputHandler =(ev, type) =>{\r\n        if(type === 'loginEmail'){\r\n            this.setState({\r\n                'loginEmail': ev.target.value\r\n            })\r\n        }\r\n        else if(type === 'loginPassword'){\r\n            this.setState({\r\n                'loginPassword': ev.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    formLoginHandler = () =>{\r\n        const email = this.state.loginEmail;\r\n        const password = this.state.loginPassword;\r\n\r\n        const dataObj = {\r\n            email: email,\r\n            password: password\r\n        }\r\n\r\n        if(email && password){\r\n            // $('.message').hide();\r\n            \r\n            // Use case 4. Authenticating a user and establishing a user session with the Amazon Cognito Identity service.\r\n            // (signin)------------------------------------------------------\r\n            const authenticationData = {\r\n                Username: dataObj.email,\r\n                Password: dataObj.password,\r\n            };\r\n            const authenticationDetails = new AuthenticationDetails(\r\n                authenticationData\r\n            );\r\n            const poolData = {\r\n                UserPoolId: config.pool_data.UserPoolId, // Your user pool id here\r\n                ClientId: config.pool_data.ClientId, // Your client id here\r\n            };\r\n            var userPool = new CognitoUserPool(poolData);\r\n\r\n            var userData = {\r\n                Username: dataObj.email,\r\n                Pool: userPool,\r\n            };\r\n\r\n            var cognitoUser = new CognitoUser(userData);\r\n\r\n            cognitoUser.authenticateUser(authenticationDetails, {\r\n                onSuccess: function(result) {\r\n\r\n                     // get token\r\n                    userPool.getCurrentUser().getSession(function(err, session){\r\n                        if(err){\r\n                            alert('error: session expired');\r\n                        }\r\n                        else{\r\n                            window.location.href = './my-music';\r\n                        }\r\n                    })\r\n\r\n                },\r\n\r\n                onFailure: function(err) {\r\n                    alert(err.message || JSON.stringify(err));\r\n                },\r\n                // end (signin-----------------------------------------)\r\n            });\r\n\r\n        }\r\n        else{\r\n            this.setState({\r\n                loginErrorMessage: 'Please fill out all fields'\r\n            })\r\n        }\r\n    }\r\n   \r\n\r\n    render(){\r\n        console.log('======================', this.state);\r\n\r\n        let loginErrorMessage = null;\r\n        if(this.state.loginErrorMessage){\r\n            loginErrorMessage = <Alert color='danger'>{this.state.loginErrorMessage}</Alert>;\r\n        }\r\n    \r\n        return (\r\n            <div className='Login'>\r\n                <img src={bgImage} alt=\"background image\" id='bgImage' className='hide-tablet'/>\r\n                    \r\n                <section>\r\n                    <Navbar\r\n                        showMobileNavbar={this.state.showMobileNavbar}\r\n                        clicked={this.toggleMobileNavbar}/>\r\n\r\n                    <div className='disp-flex' style={{padding: 0 +20+'px'}}>\r\n                        <div className='flex-50'>\r\n                            <div style={{paddingTop:120+'px'}}></div>\r\n\r\n                            <div style={{padding: 30+'px'+ 0 +10+'px'+ 0}}>\r\n                                <h1 className='title'>Kena Opus</h1>\r\n                                <div className='version'>Version 0.1 (alpha)</div>\r\n                            </div>\r\n\r\n\r\n                            <div className='padding-tb-1'>\r\n                                <input type=\"text\"\r\n                                    value={this.state.login_email}\r\n                                    onChange={(ev)=>this.inputHandler(ev, 'loginEmail')}\r\n                                    placeholder='Email'\r\n                                    className='inputField'/>\r\n                            </div>   \r\n\r\n                            <div className='padding-tb-1'>\r\n                                <input type=\"password\"\r\n                                    value={this.state.login_password}\r\n                                    onChange={(ev)=>this.inputHandler(ev, 'loginPassword')}\r\n                                    placeholder='Password'\r\n                                    className='inputField'/>\r\n                            </div>   \r\n\r\n                            <div className='text-align-right padding-tb-1'>\r\n                                <a className='link' href=\"./forgotPassword.html\">Forgot password</a>\r\n                            </div>\r\n\r\n                            {loginErrorMessage}\r\n\r\n                            <div className='padding-tb-1'>\r\n                                <Button\r\n                                    onClick={this.formLoginHandler}\r\n                                    type='button'\r\n                                    color='primary'\r\n                                    className='loginButton'\r\n                                >Login</Button>\r\n                            </div>\r\n\r\n                            <div className='text-align-center padding-tb-1'>\r\n                                <a className='link' href=\"./signup.html\">Or Sign Up</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex-50\"></div>\r\n                    </div>\r\n\r\n                    \r\n\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport './Signup.css';\r\n\r\nclass Signup extends Component{\r\n    state={\r\n      \r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n   \r\n\r\n    render(){\r\n        console.log('======================', this.state);\r\n\r\n    \r\n        return (\r\n            <div className='Signup'>\r\n                <h1>Signup page</h1>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport './SearchbarNav.css';\r\n\r\nimport Input from '../Input/Input';\r\n// import { FontAwesomeIcon } from './node_modules/@fortawesome/react-fontawesome';\r\n// import { faBars } from './node_modules/@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst searchbarNav = (props) =>{\r\n\r\n    \r\n\r\n    return (\r\n        <div className='SearchbarNav'>\r\n            <div className='searchBarMadin'>\r\n                <div className='searchBarDiv'>\r\n                    <select name=\"searchDropdownEl\" className=\"searchDropdownEl\">\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"myMusic\">My Music</option>\r\n                        <option value=\"library\">Library</option>\r\n                    </select>\r\n                    <input className='searchBar' type=\"text\" disabled placeholder=\"Search bar coming soon...\"/>\r\n                </div>\r\n                <div className='linksDiv disp-flex justify-content--end align-items--center'>\r\n                    <div className='hide-tablet'>\r\n                        <a href=\"./diagnostics\" className='diagnosticsLink' hidden>Workstation</a>\r\n                        <a href=\"./my-music\" className='myMusicLink'>My Music</a>\r\n                        <a href=\"./library\" className='libraryLink'>Library</a>\r\n                        <a href=\"./profile\" className='profileLink'>Profile</a>\r\n                    </div>\r\n                    <div>\r\n                        <Input\r\n                            inputtype='input'\r\n                            type='file'\r\n                            name='uploadMusic'\r\n                            id='uploadMuisc'\r\n                            onChange={props.changed}\r\n                            filelabelspan={props.uploadMusic1}\r\n                            filelabel={props.uploadMusic2}/>\r\n                    </div>\r\n                   \r\n                    {/* <input type=\"file\" name=\"uploadMusic\" id=\"uploadMusic\" className=\"inputfile\" data-multiple-caption=\"{count} files selected\"/>\r\n                    <label htmlFor=\"uploadMusic\"><span>Upload Music</span></label> */}\r\n                </div>   \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default searchbarNav;","import React from 'react';\r\nimport './Music.css';\r\nimport moment from 'moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons';\r\nimport Select from 'react-select';\r\n\r\nconst music = (props) =>{\r\n\r\n    // convert duration==========================================\r\n    const duration = moment.duration(props.music_duration, 'seconds');\r\n\r\n    let time = '';\r\n    const hours = duration.hours();\r\n    if(hours > 0){\r\n        time = hours + ':';\r\n    }\r\n\r\n    let seconds = duration.seconds();\r\n    if(seconds <10){\r\n        seconds = '0' + seconds;\r\n    }\r\n    time = time + duration.minutes()  + ':' + seconds;\r\n    // end convert duration==========================================\r\n\r\n\r\n    // convert unix time=============================================\r\n    const convertedTime = moment(props.modified_at, 'x').format('MMM DD,YYYY');\r\n    // end convert unix time=============================================\r\n    \r\n\r\n    // check audio icon=================================================\r\n    let playPauseIcon = 'P';\r\n    if(props.audioIcon === 'playIcon'){\r\n        playPauseIcon = <FontAwesomeIcon\r\n                            icon={faPlay}\r\n                            color='#4f4f4f'\r\n                            size='1x'/>;\r\n    }\r\n    else if(props.audioIcon === 'pauseIcon'){\r\n        playPauseIcon = <FontAwesomeIcon\r\n                            icon={faPause}\r\n                            color='#4f4f4f'\r\n                            size='1x'/>;\r\n    }\r\n    // end check audio icon=================================================\r\n\r\n\r\n    // genre options========================================================\r\n    let genreOptions = props.music_genre_id.map(val=>{\r\n        return <option key={val} value={val}>{val}</option>;\r\n    });\r\n    // end genre options========================================================\r\n\r\n    // create genre options for Select component========================================================\r\n    let selectGenreOptions = [];\r\n    props.music_genre_id.map(val=>{\r\n        selectGenreOptions.push({\r\n            value: val, label: val\r\n        })\r\n    });\r\n    // end create genre options Select component========================================================\r\n\r\n    // create default value for Select component==================================================\r\n    // 1. need to convert array to defaultValue={[colourOptions[2], colourOptions[3]]}\r\n    let selectDefaultValue = [];\r\n    props.music_genre.map(val=>{\r\n        props.music_genre_id.map((genreId, i)=>{\r\n            if(val === genreId){\r\n                selectDefaultValue.push(selectGenreOptions[i]);\r\n            }\r\n        })\r\n    });\r\n    // end create default value for Select component==================================================\r\n\r\n    // check if value need to covert from array to {value:'Piano', label:'Piano}===================\r\n    // let selectValue = [];\r\n    // console.log('props.music_genre[0].label: ', props.music_genre[0].label);\r\n    // if(!props.music_genre[0].label){\r\n    //     props.music_genre.map(val=>{\r\n    //         selectValue.push({\r\n    //             value: val, label: val\r\n    //         })\r\n    //     })\r\n    // }\r\n    // else{\r\n    //     selectValue = props.music_genre;\r\n    // }\r\n    // console.log('selectValue: ', selectValue);\r\n    // end check if value need to covert from array to {value:'Piano', label:'Piano}===================\r\n\r\n\r\n    return(\r\n        <div className='Music'>\r\n            <div className='disp-flex list-item'>\r\n                <div className='playButtonDiv'>\r\n                    <button onClick={props.clicked.bind(this, props.music_id, props.music_url)} type='button' className='btn playButton'>{playPauseIcon}</button>\r\n                    <button type='button' className='trashIconButton' onClick={props.deleteMusicClicked.bind(this, props.music_id)}>T</button>\r\n                </div>\r\n                <div className='width-100 disp-flex justify-content--space-between'>\r\n                    <div style={{width: 500+'px'}}>\r\n                    <div><input onChange={(ev)=>props.titleAndDescriptionChanged(ev, props.music_id, 'title')} type=\"text\" className='title' value={props.music_title} onBlur={props.titleAndDescriptionBlurred.bind(this, props.music_id, 'title')}/>  &nbsp;&nbsp; <span className='duration'>Duration {time}</span> <span className='createdAt'> / {convertedTime}</span> <span className='publishedStatus'>P?</span></div>\r\n                        <div style={{padding: 10+'px'+ 0}}><span className='status'>{props.status}</span> / <span className='instrument'>{props.music_instrument}</span><span hidden><select className='hiddenInstrumentSelect select2El'>\r\n                            {/* ${renderInstrumentOptions(genreEtc.instrument.instruments, myMusic[i].music_instrument)} */}\r\n                        </select></span> / \r\n                            <span className='genre'>{props.music_genre}</span><span ><select className='hiddenGenreSelect select2El' multiple>\r\n                            {genreOptions}\r\n                        </select></span>\r\n                        <Select \r\n                            defaultValue={selectDefaultValue}\r\n                            isMulti\r\n                            isClearable={false}\r\n                            // value={selectValue}\r\n                            options={selectGenreOptions}\r\n                            onChange={(value)=>props.genreChanged(value, props.music_id)}\r\n                        />\r\n                        </div>\r\n                        <textarea onChange={(ev)=>props.titleAndDescriptionChanged(ev, props.music_id, 'description')} onBlur={props.titleAndDescriptionBlurred.bind(this, props.music_id, 'description')} value={props.music_description} className='hiddenNoteTextarea' rows='4'></textarea>\r\n                    </div>\r\n                    <div style={{width: 150+'px'}} className='rightDiv'>\r\n                        <a onClick={(ev)=>props.diagnosticsButtonClicked(ev, props.music_id)} className='btn linkDiagnose' href=\"#\">Diagnose</a>\r\n                        <div></div>\r\n                        <div className='disp-flex justify-content--space-between'><span className='kenaScoreTitle'>Kena Score</span><span className='kenaScore'>{Math.round(props.kena_score)}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div class='disp-flex list-item' data-id='${myMusic[i].music_id}' data-music-status='${myMusic[i].music_status}'>\r\n                <div class='playButtonDiv'>\r\n                    <button type='button' id='playButton${myMusic[i].music_id}' class='btn playButton' data-file-url='${myMusic[i].music_url}' data-isPlaying='false'><i class=\"fas fa-play\" style=\"font-size: 14px\"></i></button>\r\n                    <button type='button' class='trashIconButton'><i class=\"fas fa-trash trashIcon\"></i></button>\r\n                </div>\r\n                <div class='width-100 disp-flex justify-content--space-between'>\r\n                    <div style='width: 500px'>\r\n                        <div><span class='title'>${myMusic[i].music_title}</span><input hidden type='text' class='hiddenTitleInput'/> &nbsp;&nbsp; <span class='duration'>Duration ${convertSeconds(myMusic[i].music_duration)}</span> <span class='createdAt'> / ${convertUnixTime(myMusic[i].modified_at)}</span> <span class='publishedStatus'>${checkIfPublished(myMusic[i].published)}</span></div>\r\n                        <div style='padding: 10px 0'><span class='status'>${myMusic[i].music_status}</span> / <span class='instrument'>${checkInstrumentNone(myMusic[i].music_instrument)}</span><span hidden><select class='hiddenInstrumentSelect select2El'>\r\n                            ${renderInstrumentOptions(genreEtc.instrument.instruments, myMusic[i].music_instrument)}\r\n                        </select></span> / \r\n                        <span class='genre'>${renderGenre(myMusic[i].music_genre)}</span><span hidden><select class='hiddenGenreSelect select2El' multiple>\r\n                            ${renderGenreOptions(genreEtc.genre.music_genre_id)}\r\n                        </select></span></div>\r\n                        <div class='note'>${truncateNote(myMusic[i].music_description)}</div><textarea class='hiddenNoteTextarea' rows='4'></textarea>\r\n                    </div>\r\n                    <div style='width: 150px' class='rightDiv'>\r\n                        <a class='btn linkDiagnose' href=\"#\">Diagnose</a>\r\n                        <div id='score${myMusic[i].music_id}'></div>\r\n                        <div class='disp-flex justify-content--space-between'><span class='kenaScoreTitle'>Kena Score</span><span class='kenaScore'>${Math.round(myMusic[i].kena_score)}</span></div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default music;","import React, {Component} from 'react';\r\nimport './Mymusic.css';\r\nimport kenaLogo from '../../assets/logo.png';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport { \r\n    CognitoUserPool, \r\n    AuthenticationDetails, \r\n    CognitoUser,\r\n    CognitoUserSession,\r\n    CognitoUserAttribute\r\n} from 'amazon-cognito-identity-js';\r\nimport bgImage from '../../assets/bg2.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport produce from 'immer';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nimport Navbar from '../../componentes/Navbar/Navbar';\r\nimport Input from '../../componentes/Input/Input';\r\nimport Button from '../../componentes/Button/Button';\r\nimport SearchbarNav from '../../componentes/SearchbarNav/SearchbarNav';\r\nimport Music from '../../componentes/Music/Music';\r\n\r\nclass Mymusic extends Component{\r\n    state={\r\n        userId: '',\r\n        myMusic: [],\r\n        uploadMusic1: 'Upload Music',\r\n        uploadMusic2: 'Upload Music',\r\n        loadingIcon: false,\r\n        showMobileNavbar: false,\r\n        playPauseAudio: {\r\n            musicId: null,\r\n            fileUrl: null,\r\n            playing: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.addEventListener('mousedown', this.handleOutsideClick);\r\n\r\n        // const ajaxData = {\r\n        //     \"user_id\": userId,\r\n        //     'page_no': 0,\r\n        //     'stage': config.stage,\r\n        // }\r\n\r\n        // axios({\r\n        //     url: config.apiGateway.get_music_list,\r\n        //     method: 'post',\r\n        //     data: ajaxData,\r\n        //     headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n        // }).then(response =>{\r\n        // console.log('success response: ', response);\r\n        // }).catch(err =>{\r\n        //     console.log('err: ', err);\r\n        // });\r\n        \r\n        const poolData = {\r\n            UserPoolId: config.pool_data.UserPoolId, // Your user pool id here\r\n            ClientId: config.pool_data.ClientId, // Your client id here\r\n        };\r\n\r\n        var userPool = new CognitoUserPool(poolData);\r\n        var cognitoUser = userPool.getCurrentUser();\r\n\r\n        console.log('cognito user: ', cognitoUser);\r\n\r\n        if (cognitoUser != null) {\r\n            // loading icon-----------------------------------\r\n            this.setState({\r\n                loadingIcon: true\r\n            });\r\n\r\n            // save userid\r\n            const userId = cognitoUser.username;\r\n            this.setState({\r\n                userId: userId\r\n            });\r\n\r\n            // get token\r\n            this.getAuthenticatedUser().getSession(function(err, session){\r\n                if(err){\r\n                    alert('error: session expired');\r\n                }\r\n                else{\r\n                    // check if user exists on db-------------------------------\r\n                    const checkUserInDbAjaxData = {\r\n                        \"userId\": userId,\r\n                        \"stage\": config.stage,\r\n                    }\r\n\r\n                    axios({\r\n                        url: config.apiGateway.checkfirsttimelogin,\r\n                        method: 'post',\r\n                        data: JSON.stringify(checkUserInDbAjaxData),\r\n                        contentType: \"application/json\",\r\n                        headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                    }).then(response =>{\r\n                        console.log('success check first time login: ', response);\r\n                        // need to check if user logged in for the first time\r\n                        if(response.data.Item){\r\n                            console.log('found user in db');\r\n                        }\r\n                        else{\r\n                            console.log('did not find user in db');\r\n\r\n                            // save user to user table--------------------------------\r\n                            // get promocode\r\n                            let localStorageData = '';\r\n                            let promoCode = null;\r\n                            if(localStorage.getItem('kenaPromoData') !== null){\r\n                                localStorageData = JSON.parse(localStorage.getItem('kenaPromoData'));\r\n                                promoCode = localStorageData.promoCode;\r\n                            }\r\n\r\n                            console.log('ls data: ', localStorageData);\r\n                            console.log('promocode: ', promoCode);\r\n\r\n                            let userData = {\r\n                                'userId': userId,\r\n                                'created_at': Date.now(),   // UTC timestamp in milliseconds\r\n                                'promoCode': promoCode,\r\n                                'stage': config.stage,\r\n                            };\r\n\r\n                             axios({\r\n                                url: config.apiGateway.save_user_to_user_table,\r\n                                method: 'post',\r\n                                data: userData,\r\n                                contentType: \"application/json\",\r\n                                headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                            }).then(response =>{\r\n                                console.log('succeeded saved user to user table');  \r\n                                console.log('response', response);  \r\n    \r\n                                // empty local storage promo code\r\n                                const storeData = {\r\n                                    'promoCode': null\r\n                                }\r\n                                \r\n                                localStorage.setItem('kenaPromoData', JSON.stringify(storeData)); \r\n                                             \r\n                            }).catch(err =>{\r\n                                console.log('err: ', err);\r\n                            });\r\n                        }\r\n\r\n                    }).catch(err =>{\r\n                        console.log('err: ', err);\r\n                    }); \r\n\r\n                    // get genre etc-----------------------------------------------------------\r\n                    const ajaxDataGetGenreEtc = {\r\n                        'stage': config.stage,\r\n                    }\r\n\r\n                    axios({\r\n                        url: config.apiGateway.get_genre_etc,\r\n                        method: 'post',\r\n                        data: JSON.stringify(ajaxDataGetGenreEtc),\r\n                        contentType: \"application/json\",\r\n                        headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                    }).then(response =>{\r\n                        console.log('succeeded get gereEtc');  \r\n                        console.log('response: ', response);\r\n\r\n                        const genreEtc = {};\r\n                        genreEtc.musicScale = JSON.parse(response.data.musicScale);\r\n                        genreEtc.genre = JSON.parse(response.data.genre);\r\n                        genreEtc.instrument = JSON.parse(response.data.instrument);\r\n                        genreEtc.mood = JSON.parse(response.data.mood);\r\n                        genreEtc.musicKey = JSON.parse(response.data.musicKey);\r\n                        console.log('genreEtc: ', genreEtc);\r\n\r\n                        this.setState({\r\n                            genreEtc: genreEtc\r\n                        });\r\n\r\n                        const ajaxData = {\r\n                            \"user_id\": userId,\r\n                            'page_no': 0,\r\n                            'stage': config.stage,\r\n                        }\r\n\r\n                        // check email\r\n                        if(userId === ajaxData.user_id){\r\n                            console.log('passed email check');\r\n                            axios({\r\n                                url: config.apiGateway.get_music_list,\r\n                                method: 'post',\r\n                                data: JSON.stringify(ajaxData),\r\n                                headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                            }).then(response =>{\r\n                                console.log('succeeded loading data on page load');  \r\n                                console.log('response: ', response);\r\n\r\n                                const myMusic = response.data.music_info_list;\r\n\r\n                                // check if music array is not empty\r\n                                if(myMusic.length){\r\n\r\n                                    // sort the list by time\r\n                                    myMusic.sort(function(a, b){return b.created_at - a.created_at});\r\n\r\n                                    this.setState({\r\n                                        myMusic: myMusic,\r\n                                        loadingIcon: false\r\n                                    });\r\n\r\n                                    console.log('sorted myMusic: ', myMusic);\r\n                        \r\n                                    // // update UI-----------------------\r\n                                    // renderMyMusicList();\r\n                                    // renderProgreeBar();\r\n                                    // playPauseAudio();\r\n                                    // checkDiagnosticsProcessing();\r\n                                }\r\n                                else{\r\n                                    // $('#myMusicList').html(tutorialStepsHtml);\r\n                                }\r\n                            }).catch(err =>{\r\n                                console.log('err: ', err);\r\n                            });\r\n                        }\r\n\r\n\r\n                    }).catch(err =>{\r\n                        console.log('err: ', err);\r\n                    });\r\n                   \r\n                }\r\n            }.bind(this));\r\n\r\n        }\r\n        else{\r\n            window.location.href = './index.html?v=17';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.removeEventListener('mousedown', this.handleOutsideClick);\r\n    } \r\n\r\n    handleOutsideClick = (e) =>{\r\n        // clicked navbar?\r\n        if(this.navbarNode.contains(e.target)){\r\n            \r\n        }\r\n        else{\r\n            console.log('outside navbar');\r\n            this.setState({\r\n                showMobileNavbar: false\r\n            });\r\n        }\r\n\r\n        // clicked p?\r\n        if(this.pNode.contains(e.target)){\r\n            \r\n        }\r\n        else{\r\n            console.log('outside p');\r\n        }\r\n    }\r\n\r\n    getAuthenticatedUser = () =>{\r\n        const poolData = {\r\n            UserPoolId: config.pool_data.UserPoolId, // Your user pool id here\r\n            ClientId: config.pool_data.ClientId, // Your client id here\r\n        };\r\n\r\n        var userPool = new CognitoUserPool(poolData);\r\n        return userPool.getCurrentUser();\r\n    }\r\n\r\n    checkLoggedInemailIsSameAsSendingRequest = (snedingEmail) =>{\r\n        // console.log('sendingmeial: ', snedingEmail);\r\n        const userId = this.state.userId;\r\n        // console.log('userid: ', userId);\r\n        if(userId == snedingEmail){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    toggleMobileNavbar = () =>{\r\n        this.setState({\r\n            showMobileNavbar: !this.state.showMobileNavbar\r\n        });\r\n    }\r\n\r\n    uploadMusicHandler = (ev) =>{\r\n        console.log('type: ', ev.target.type);\r\n        if(ev.target.type && ev.target.type === 'file'){\r\n            // display file name when file was selected\r\n            const label = ev.target.nextElementSibling;\r\n            const labelVal = label.innerHTML;\r\n\r\n            let fileName = '';\r\n            if(ev.target.files && ev.target.files.length > 1){\r\n                fileName = (ev.target.getAttribute('data-multiple.caption') || '').replace('{count}', ev.target.files.length);\r\n            }\r\n            else{\r\n                fileName = ev.target.value.split('\\\\').pop();\r\n\r\n                console.log('e target files[0]: ', ev.target.files[0]);\r\n                console.log('file name: ', ev.target.files[0].name);\r\n                console.log('file type: ', ev.target.files[0].type);\r\n                console.log('file size: ', ev.target.files[0].size/1024/1024 + 'MB');\r\n            }\r\n\r\n            if(fileName){\r\n                const span = ev.target.name +1;\r\n                console.log('span state: ', span);\r\n                this.setState({ [span]: fileName });\r\n\r\n                // file extension and size vertification\r\n                const fileNameSplit =  ev.target.files[0].name.split('.');\r\n                let fileExtension = fileNameSplit[fileNameSplit.length -1];\r\n                fileExtension = fileExtension.toLowerCase();\r\n                const fileSize = Math.round(ev.target.files[0].size/1024/1024);\r\n\r\n                const userId = this.state.userId;\r\n                console.log('ext, size: ', fileExtension + \", \", fileSize);\r\n                console.log('filenamesplit[0]: ', fileNameSplit[0]);\r\n                console.log('userid: ', userId);\r\n\r\n                let isAcceptableExtension = null;\r\n                if(fileExtension == \"mp3\" || fileExtension == \"m4a\" || fileExtension == \"ogg\" || fileExtension == \"wav\"){\r\n                    isAcceptableExtension = true;\r\n                }\r\n                else{\r\n                    // if wong extansion\r\n                    alert('Max file size : 2MB. Supported extensions: mp3, m4a, ogg, wav');\r\n                }\r\n\r\n                // check file extension and size (2MB)\r\n                if(isAcceptableExtension && fileSize < 2){\r\n                    console.log('file size and ext is good');\r\n\r\n                    // loading icon------------------------------------\r\n                    this.setState({\r\n                        loadingIcon: true,\r\n                    });\r\n\r\n                    // base64--------------------------------------------\r\n                    // testing api post\r\n                    let userData = {\r\n                        'userId': userId,\r\n                        'fileName': fileNameSplit[0],\r\n                        'created_at': Date.now(),   // UTC timestamp in milliseconds\r\n                        'stage': config.stage,\r\n                    };\r\n\r\n                    const userFile = ev.target.files[0];\r\n\r\n                    console.log('userdata: ', userData);\r\n\r\n                    const that = this;\r\n\r\n                    // get binary string-----------------------------------------\r\n                    (function handleFileSelect(evt) {\r\n                        var f = userFile; // FileList object\r\n                        var reader = new FileReader();\r\n                        // Closure to capture the file information.\r\n                        reader.onload = (function(theFile) {\r\n                            return function(e) {                                       \r\n\r\n                                var binaryData = e.target.result;\r\n                                //Converting Binary Data to base 64\r\n                                var base64String = window.btoa(binaryData);\r\n                                userData.user_file = base64String;\r\n\r\n                                console.log('base64string: ', base64String);\r\n\r\n                                // get token--------------------------------------------------\r\n                                console.log('that', that);\r\n                                that.getAuthenticatedUser().getSession(function(err, session){\r\n                                    if(err){\r\n                                        alert('error: session expired');\r\n                                    }\r\n                                    else{\r\n\r\n                                        // check email\r\n                                        if(that.checkLoggedInemailIsSameAsSendingRequest(userData.userId)){\r\n\r\n                                             axios({\r\n                                                // url: config.apiGateway.uploadfile,\r\n                                                method: 'post',\r\n                                                data: JSON.stringify(userData),\r\n                                                contentType: 'application/json',\r\n                                                headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                                            }).then(response =>{\r\n                                                console.log('success response: ', response);\r\n\r\n                                            }).catch(err =>{\r\n                                                console.log('err: ', err);\r\n                                            });\r\n\r\n                                        }\r\n                                    }\r\n                                })\r\n\r\n                            };\r\n                        })(f);\r\n                        // Read in the image file as a data URL.\r\n                        reader.readAsBinaryString(f);\r\n                    })();\r\n\r\n                }\r\n            }\r\n            else{\r\n                const label = ev.target.name +2;\r\n                this.setState({[label]:labelVal});\r\n            }\r\n        }\r\n    }\r\n\r\n    audioEl = document.createElement('audio');\r\n\r\n    playPauseAudio = (newMusicId, newFileUrl) =>{\r\n        // let currentPlayingId = null;\r\n\r\n        console.log('test');\r\n        console.log('newMusicId: ', newMusicId);\r\n        console.log('old musicid: ', this.state.playPauseAudio.musicId);\r\n        console.log('newFileUrl: ', newFileUrl);\r\n\r\n        // check if user wants to play different music\r\n        if(this.state.playPauseAudio.musicId === newMusicId){\r\n            console.log('same music id');\r\n            console.log('t f: ', this.audioEl.paused);\r\n            if(this.audioEl.paused){\r\n                console.log('music paused');\r\n                // play music\r\n                this.audioEl.play();\r\n                // update UI\r\n                const newPlayPauseAudio = {...this.state.playPauseAudio};\r\n                newPlayPauseAudio.playing = true;\r\n                this.setState({\r\n                   playPauseAudio: newPlayPauseAudio\r\n                });\r\n            }\r\n            else{\r\n                console.log('music is playing');\r\n                // pause music\r\n                this.audioEl.pause();\r\n                // update UI\r\n                const newPlayPauseAudio = {...this.state.playPauseAudio};\r\n                newPlayPauseAudio.playing = false;\r\n                this.setState({\r\n                    playPauseAudio: newPlayPauseAudio\r\n                });\r\n            }\r\n        }\r\n        else{\r\n             // play a different music\r\n             console.log('different music');\r\n\r\n             const that = this;\r\n\r\n            // ajax call ----------------------------------------\r\n            // const path = newFileUrl.split(kenaConfig.musicBucket)[1];\r\n            const path = newFileUrl.split(config.bucket.musicBucket)[1];\r\n\r\n            console.log('path: ', path);\r\n\r\n            const ajaxData = {\r\n                path: path,\r\n                'stage': config.stage,\r\n            }\r\n\r\n            this.getAuthenticatedUser().getSession(function(err, session){\r\n                if(err){\r\n                    alert('error: session expired');\r\n                }\r\n                else{\r\n\r\n                    console.log('ajaxdata: ', ajaxData);\r\n\r\n                    axios({\r\n                        url: config.apiGateway.downloadfile,\r\n                        method: 'post',\r\n                        data: JSON.stringify(ajaxData),\r\n                        headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                    }).then(response =>{\r\n                        console.log('success response: ', response);\r\n\r\n                        // play audio player---------------------\r\n                        \r\n                        that.audioEl.src = response.data;\r\n                        that.audioEl.play();\r\n                        // update UI\r\n                        const newPlayPauseAudio = {...that.state.playPauseAudio};\r\n                        newPlayPauseAudio.musicId = newMusicId;\r\n                        newPlayPauseAudio.fileUrl = newFileUrl;\r\n                        newPlayPauseAudio.playing = true;\r\n\r\n                        that.setState({\r\n                            playPauseAudio: newPlayPauseAudio\r\n                        });\r\n\r\n                    }).catch(err =>{\r\n                        console.log('err: ', err);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    checkAudioIcon = (musicId) =>{\r\n        console.log('musicId: ', musicId);\r\n        console.log('state musicId: ', this.state.playPauseAudio.musicId);\r\n        console.log('state plying: ', this.state.playPauseAudio.playing);\r\n        if(this.state.playPauseAudio.musicId === musicId && this.state.playPauseAudio.playing){\r\n            return 'pauseIcon';\r\n        }\r\n        else{\r\n            return 'playIcon'\r\n        }\r\n    }\r\n\r\n    descriptionChangeHandler = (ev, musicId, type) =>{\r\n        const val = ev.target.value;\r\n\r\n        // find index\r\n        const index = this.state.myMusic.findIndex(val=>{\r\n            return val.music_id === musicId;\r\n        });\r\n\r\n        // copy object\r\n        const copiedMusic = {...this.state.myMusic[index]};\r\n\r\n        if( type === 'description'){\r\n            copiedMusic.music_description = val;\r\n        }\r\n        else if(type === 'title'){\r\n            copiedMusic.music_title = val;\r\n        }\r\n        \r\n        // update data\r\n        const myMusic = [...this.state.myMusic];\r\n        myMusic[index] = copiedMusic;\r\n\r\n        this.setState({\r\n            myMusic: myMusic\r\n        });\r\n\r\n    }\r\n\r\n    descriptionBlurredHandler = (musicId) =>{\r\n        // find indes\r\n        const index = this.state.myMusic.findIndex(val=>{\r\n            return val.music_id === musicId;\r\n        });\r\n\r\n        // update db\r\n        const ajaxUrl = config.apiGateway.update_music_info;\r\n\r\n        const ajaxData = {\r\n            \"user_id\": this.state.userId,\r\n            \"music_id\": musicId,\r\n            \"modified_at\": Date.now(),\r\n            \"music_title\": this.state.myMusic[index].music_title,\r\n            // \"music_genre\" : myMusic[musicIndex].music_genre,\r\n            // \"music_instrument\" : myMusic[musicIndex].music_instrument,\r\n            \"music_description\" : this.state.myMusic[index].music_description,\r\n            'stage': config.stage,\r\n        }\r\n\r\n        console.log('ajaxData: ', ajaxData);\r\n\r\n        this.updateDatabase(ajaxData, ajaxUrl);\r\n    }\r\n\r\n\r\n    updateDatabase = (ajaxData, ajaxUrl) =>{\r\n        console.log('ajaxData: ', ajaxData);\r\n        console.log('ajaxUrl: ', ajaxUrl);\r\n\r\n        // get token\r\n        this.getAuthenticatedUser().getSession(function(err, session){\r\n            if(err){\r\n                alert('error: session expired');\r\n            }\r\n            else{            \r\n                axios({\r\n                    url: ajaxUrl,\r\n                    method: 'post',\r\n                    data: ajaxData,\r\n                    headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                }).then(response =>{\r\n                    console.log('success response: ', response);\r\n                }).catch(err =>{\r\n                    console.log('err: ', err);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteMusicHandler = (musicId) =>{\r\n        const index = this.state.myMusic.findIndex(val=>{\r\n            return val.music_id === musicId;\r\n        });\r\n\r\n        console.log('index: ', index);\r\n        console.log('musicId: ', musicId);\r\n\r\n        // update db\r\n        const ajaxUrl = config.apiGateway.delete_music;\r\n\r\n        const ajaxData = {\r\n            user_id: this.state.userId,\r\n            music_id: musicId,\r\n            music_status: this.state.myMusic[index].music_status,\r\n            music_genre_id: this.state.myMusic[index].music_genre_id,\r\n            'stage': config.stage,\r\n        }\r\n\r\n        console.log('ajaxData: ', ajaxData);\r\n        console.log('ajaxUrl: ', ajaxUrl);\r\n\r\n        this.updateDatabase(ajaxData, ajaxUrl);\r\n\r\n        // update UI\r\n        const updatedData = produce(this.state.myMusic, draft =>{\r\n            draft.splice(index, 1);\r\n        });\r\n\r\n        this.setState({\r\n            myMusic: updatedData\r\n        });\r\n\r\n    }\r\n  \r\n    genreChangeHandler = (value, musicId) =>{\r\n        console.log('value: ', value);\r\n        console.log('musicId: ', musicId);\r\n\r\n        // 2. value is obj, need to convert obj to array to save\r\n        let objValueToArray = []; // empty\r\n        if(value){\r\n            objValueToArray = value.map(obj=>{\r\n                return obj.value;\r\n            });\r\n        }\r\n\r\n        console.log('objValueToArray', objValueToArray);\r\n\r\n        const index = this.state.myMusic.findIndex(val=>{\r\n            return val.music_id === musicId;\r\n        });\r\n\r\n        // update ui\r\n        const updatedData = produce(this.state.myMusic, draft =>{\r\n            draft[index].music_genre = objValueToArray;\r\n        });\r\n\r\n        this.setState({\r\n            myMusic: updatedData\r\n        });\r\n        \r\n    }\r\n\r\n    diagnosticsButtonClickHandler = (ev, musicId) =>{\r\n        ev.preventDefault();\r\n        console.log('diag button clicked');\r\n        console.log('musicId: ', musicId);\r\n\r\n        const myPassword = 'fujiappletastgreat';\r\n\r\n        const encryptedUserId = CryptoJS.AES.encrypt(this.state.userId, myPassword);\r\n        const encryptedMusicId = CryptoJS.AES.encrypt(musicId, myPassword);\r\n        \r\n        const musicData = {\r\n            'userId': encryptedUserId.toString(),\r\n            'authorId': encryptedUserId.toString(),\r\n            \"musicId\": encryptedMusicId.toString(),\r\n        }\r\n\r\n        localStorage.setItem('kenaMusicData', JSON.stringify(musicData));\r\n\r\n        // console.log('redirect to diagnostics page');\r\n        window.location.href = './diagnostics';\r\n\r\n    }\r\n\r\n    render(){\r\n        console.log('======================', this.state);\r\n\r\n        let loading = null;\r\n        if(this.state.loadingIcon){\r\n            loading = <div className='loading'>\r\n                    <FontAwesomeIcon\r\n                        icon={faSpinner}\r\n                        color='#4f4f4f'\r\n                        size='6x'\r\n                        spin/>\r\n                </div>\r\n        }\r\n\r\n        let musicList = null;\r\n        if(this.state.myMusic.length){\r\n            musicList = this.state.myMusic.map((val)=>{\r\n                return <Music\r\n                        key={val.music_id}\r\n                        diagnostics_status={val.diagnostics_status}\r\n                        music_id={val.music_id}\r\n                        music_satatus={val.music_satatus}\r\n                        music_url={val.music_url}\r\n                        music_title={val.music_title}\r\n                        music_instrument={val.music_instrument}\r\n                        music_duration={val.music_duration}\r\n                        modified_at={val.modified_at}\r\n                        published={val.published}\r\n                        music_genre={val.music_genre}\r\n                        music_description={val.music_description}\r\n                        kena_score={val.kena_score}\r\n                        clicked={this.playPauseAudio}\r\n                        audioIcon={this.checkAudioIcon(val.music_id)}\r\n                        titleAndDescriptionChanged={this.descriptionChangeHandler}\r\n                        titleAndDescriptionBlurred={this.descriptionBlurredHandler}\r\n                        deleteMusicClicked={this.deleteMusicHandler}\r\n                        music_genre_id={this.state.genreEtc.genre.music_genre_id}\r\n                        genreChanged={this.genreChangeHandler}\r\n                        diagnosticsButtonClicked={this.diagnosticsButtonClickHandler}/>\r\n            })\r\n        }\r\n    \r\n        return (\r\n            <div className='Library'>\r\n                <section>\r\n                    <div ref={node => {this.navbarNode = node;}}>\r\n                        <Navbar\r\n                            showMobileNavbar={this.state.showMobileNavbar}\r\n                            clicked={this.toggleMobileNavbar}/>\r\n                    </div>\r\n                    \r\n                    <div style={{paddingTop:120+'px'}}></div>\r\n\r\n                    <SearchbarNav\r\n                        changed={this.uploadMusicHandler}\r\n                        uploadMusic1={this.state.uploadMusic1}\r\n                        uploadMusic2={this.state.uploadMusic2}\r\n                    />\r\n\r\n                    {loading}\r\n\r\n                    <h1 ref={node => {this.h1Node = node;}}>My Music</h1>\r\n\r\n                    <p ref={node => {this.pNode = node}}>hdioahfio</p>\r\n                    \r\n                    {musicList}\r\n\r\n\r\n                    \r\n                  \r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Mymusic;","import React from 'react';\r\nimport './Tabs.css';\r\n\r\nconst Tabs = (props) =>{\r\n\r\n\r\n    // create buttons\r\n    let buttons = '';\r\n    buttons = props.children.map((val, i)=>{\r\n        // *val is a child and can access id using props\r\n        // console.log('val', val);  \r\n        return <button\r\n            type='button'\r\n            className='tablinks'\r\n            key={i}\r\n            onClick={props.clicked.bind(this, val.props.id)}>{val.props.id}</button>\r\n    });\r\n\r\n    return(\r\n        <div className='Tabs'>\r\n            {buttons}\r\n\r\n            {/* \r\n                loop through children div then access props.id using React.Children.map\r\n                it is basically same as array.map(val=>{})\r\n                it doesn't work if there is single element in children\r\n                Below method also works with props.children.map\r\n            */}\r\n            {React.Children.map(props.children, (child, i) =>{\r\n                // console.log('activeTab', props.activeTab);\r\n                // console.log('child id', child.props.id);\r\n                \r\n                if(props.activeTab === child.props.id){\r\n                    return(\r\n                        <div className='tabcontent'>\r\n                            {child}\r\n                        </div>\r\n                    );\r\n                }\r\n            })}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs;","import React, {Component} from 'react';\r\nimport './Diagnostics.css';\r\nimport kenaLogo from '../../assets/logo.png';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport { \r\n    CognitoUserPool, \r\n    AuthenticationDetails, \r\n    CognitoUser,\r\n    CognitoUserSession,\r\n    CognitoUserAttribute\r\n} from 'amazon-cognito-identity-js';\r\nimport bgImage from '../../assets/bg2.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport produce from 'immer';\r\nimport CryptoJS from 'crypto-js';\r\nimport Chart from 'chart.js';\r\n\r\nimport Navbar from '../../componentes/Navbar/Navbar';\r\nimport Input from '../../componentes/Input/Input';\r\nimport Button from '../../componentes/Button/Button';\r\nimport SearchbarNav from '../../componentes/SearchbarNav/SearchbarNav';\r\nimport Music from '../../componentes/Music/Music';\r\nimport Tabs from '../../componentes/Tabs/Tabs';\r\n\r\nclass Diagnostics extends Component{\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.earlyLateChart = React.createRef();\r\n    // }\r\n    earlyLateChart = React.createRef();\r\n    chartRef2 = React.createRef();\r\n\r\n    state={\r\n        userId: '',\r\n        data: {},\r\n        uploadMusic1: 'Upload Music',\r\n        uploadMusic2: 'Upload Music',\r\n        loadingIcon: false,\r\n        showMobileNavbar: false,\r\n        playPauseAudio: {\r\n            musicId: null,\r\n            fileUrl: null,\r\n            playing: false,\r\n        },\r\n        activeTab: 'Diagnostics',\r\n        rhythmChartX : [],\r\n        rhythmChartY : [],\r\n    }\r\n\r\n    componentDidMount(){\r\n        // const ajaxData = {\r\n        //     \"user_id\": userId,\r\n        //     'page_no': 0,\r\n        //     'stage': config.stage,\r\n        // }\r\n\r\n        // axios({\r\n        //     url: config.apiGateway.get_music_list,\r\n        //     method: 'post',\r\n        //     data: ajaxData,\r\n        //     headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n        // }).then(response =>{\r\n        // console.log('success response: ', response);\r\n        // }).catch(err =>{\r\n        //     console.log('err: ', err);\r\n        // });\r\n\r\n        document.addEventListener('mousedown', this.handleOutsideClick);\r\n        \r\n        const poolData = {\r\n            UserPoolId: config.pool_data.UserPoolId, // Your user pool id here\r\n            ClientId: config.pool_data.ClientId, // Your client id here\r\n        };\r\n\r\n        var userPool = new CognitoUserPool(poolData);\r\n        var cognitoUser = userPool.getCurrentUser();\r\n\r\n        console.log('cognito user: ', cognitoUser);\r\n\r\n        if (cognitoUser != null) {\r\n\r\n            // save userid\r\n            const userId = cognitoUser.username;\r\n            this.setState({\r\n                userId: userId\r\n            });\r\n\r\n            // get token\r\n            this.getAuthenticatedUser().getSession(function(err, session){\r\n                if(err){\r\n                    alert('error: session expired');\r\n                }\r\n                else{\r\n                    // get genre etc-----------------------------------------------------------\r\n                    const ajaxDataGetGenreEtc = {\r\n                        'stage': config.stage,\r\n                    }\r\n\r\n                    axios({\r\n                        url: config.apiGateway.get_genre_etc,\r\n                        method: 'post',\r\n                        data: JSON.stringify(ajaxDataGetGenreEtc),\r\n                        contentType: \"application/json\",\r\n                        headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                    }).then(response =>{\r\n                        console.log('succeeded get gereEtc');  \r\n                        console.log('response: ', response);\r\n\r\n                        const genreEtc = {};\r\n                        genreEtc.musicScale = JSON.parse(response.data.musicScale);\r\n                        genreEtc.genre = JSON.parse(response.data.genre);\r\n                        genreEtc.instrument = JSON.parse(response.data.instrument);\r\n                        genreEtc.mood = JSON.parse(response.data.mood);\r\n                        genreEtc.musicKey = JSON.parse(response.data.musicKey);\r\n                        console.log('genreEtc: ', genreEtc);\r\n\r\n                        this.setState({\r\n                            genreEtc: genreEtc\r\n                        });\r\n\r\n                        // get local storage!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                        if(localStorage.getItem('kenaMusicData') !== null){\r\n                            const localStorageData = JSON.parse(localStorage.getItem('kenaMusicData'));\r\n\r\n                            // console.log('encrypteduserId: ', encrypteduserId);\r\n                            const myPassword = 'fujiappletastgreat';    \r\n                            const bytesUserId = CryptoJS.AES.decrypt(localStorageData.userId, myPassword);\r\n                            const bytesAuthorId = CryptoJS.AES.decrypt(localStorageData.authorId, myPassword);\r\n                            const bytesMusicId = CryptoJS.AES.decrypt(localStorageData.musicId, myPassword);\r\n                            const decryptedUserId = bytesUserId.toString(CryptoJS.enc.Utf8);\r\n                            const decryptedAuthorId = bytesAuthorId.toString(CryptoJS.enc.Utf8);\r\n                            const decryptedMusicId = bytesMusicId.toString(CryptoJS.enc.Utf8);\r\n    \r\n                            const ajaxData = {\r\n                                user_id : decryptedUserId,\r\n                                music_author_id : decryptedAuthorId,\r\n                                music_id: decryptedMusicId,\r\n                                stage: config.stage,\r\n                            }\r\n\r\n                            console.log('ajaxData: ', ajaxData);\r\n\r\n                            // check if viewer is author-------------------------------\r\n                            let isViewerIsAuthor = '';\r\n                                \r\n                            if(ajaxData.user_id == ajaxData.music_author_id){\r\n                                isViewerIsAuthor = true;\r\n                            }\r\n\r\n                            console.log('isViewerIsAuthor: ', isViewerIsAuthor);\r\n\r\n                            console.log(' get music ajaxData: ', ajaxData);\r\n    \r\n                            // check email\r\n                            if(this.checkLoggedInemailIsSameAsSendingRequest(ajaxData.user_id)){\r\n                                \r\n                                axios({\r\n                                    url: config.apiGateway.get_music_diagnostics,\r\n                                    method: 'post',\r\n                                    data: ajaxData,\r\n                                    headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                                }).then(response =>{\r\n                                    console.log('success response: ', response.data);\r\n                                    console.log('parsed response: ', JSON.parse(response.data));\r\n\r\n                                    const data = JSON.parse(response.data);\r\n                                    this.setState({\r\n                                        data: data\r\n                                    });\r\n\r\n                                    // render early/late chart----------------------------------\r\n                                    // round up beat_times data\r\n                                    const rhythmChartX = []; // round up 2.01 is good\r\n                                    const rhythmChartY = data.errors;\r\n                                    \r\n                                    for(let i=0; i<data.beat_times.length; i++){\r\n                                        rhythmChartX.push(data.beat_times[i].toFixed(2));\r\n                                    }\r\n\r\n                                    this.setState({\r\n                                        rhythmChartX: rhythmChartX,\r\n                                        rhythmChartY: rhythmChartY\r\n                                    })\r\n\r\n                                    this.createEarlyLateChart(rhythmChartX, rhythmChartY);\r\n\r\n                                }).catch(err =>{\r\n                                    console.log('err: ', err);\r\n                                });\r\n                            }\r\n                        }\r\n                    }).catch(err =>{\r\n                        console.log('err: ', err);\r\n                    });\r\n                   \r\n                }\r\n            }.bind(this));\r\n\r\n        }\r\n        else{\r\n            window.location.href = './index.html?v=17';\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        // for chart\r\n        if(this.state.activeTab === 'Diagnostics'){\r\n            /* \r\n               Because tab will hide (delete?) elements inside of it, we need to re-initialize when it re-appear.\r\n               We need to make sure render() had occurred before searching for char ref\r\n               so use componentDidMount() or componentDidUpdate() to run the function.\r\n            */\r\n            this.createEarlyLateChart(this.state.rhythmChartX, this.state.rhythmChartY);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.removeEventListener('mousedown', this.handleOutsideClick);\r\n    } \r\n\r\n    handleOutsideClick = (e) =>{\r\n        // clicked h1?\r\n        if(this.navbarNode.contains(e.target)){\r\n            \r\n        }\r\n        else{\r\n            this.setState({\r\n                showMobileNavbar: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getAuthenticatedUser = () =>{\r\n        const poolData = {\r\n            UserPoolId: config.pool_data.UserPoolId, // Your user pool id here\r\n            ClientId: config.pool_data.ClientId, // Your client id here\r\n        };\r\n\r\n        var userPool = new CognitoUserPool(poolData);\r\n        return userPool.getCurrentUser();\r\n    }\r\n\r\n    checkLoggedInemailIsSameAsSendingRequest = (snedingEmail) =>{\r\n        // console.log('sendingmeial: ', snedingEmail);\r\n        const userId = this.state.userId;\r\n        // console.log('userid: ', userId);\r\n        if(userId == snedingEmail){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    uploadMusicHandler = (ev) =>{\r\n        console.log('type: ', ev.target.type);\r\n        if(ev.target.type && ev.target.type === 'file'){\r\n            // display file name when file was selected\r\n            const label = ev.target.nextElementSibling;\r\n            const labelVal = label.innerHTML;\r\n\r\n            let fileName = '';\r\n            if(ev.target.files && ev.target.files.length > 1){\r\n                fileName = (ev.target.getAttribute('data-multiple.caption') || '').replace('{count}', ev.target.files.length);\r\n            }\r\n            else{\r\n                fileName = ev.target.value.split('\\\\').pop();\r\n\r\n                console.log('e target files[0]: ', ev.target.files[0]);\r\n                console.log('file name: ', ev.target.files[0].name);\r\n                console.log('file type: ', ev.target.files[0].type);\r\n                console.log('file size: ', ev.target.files[0].size/1024/1024 + 'MB');\r\n            }\r\n\r\n            if(fileName){\r\n                const span = ev.target.name +1;\r\n                console.log('span state: ', span);\r\n                this.setState({ [span]: fileName });\r\n\r\n                // file extension and size vertification\r\n                const fileNameSplit =  ev.target.files[0].name.split('.');\r\n                let fileExtension = fileNameSplit[fileNameSplit.length -1];\r\n                fileExtension = fileExtension.toLowerCase();\r\n                const fileSize = Math.round(ev.target.files[0].size/1024/1024);\r\n\r\n                const userId = this.state.userId;\r\n                console.log('ext, size: ', fileExtension + \", \", fileSize);\r\n                console.log('filenamesplit[0]: ', fileNameSplit[0]);\r\n                console.log('userid: ', userId);\r\n\r\n                let isAcceptableExtension = null;\r\n                if(fileExtension == \"mp3\" || fileExtension == \"m4a\" || fileExtension == \"ogg\" || fileExtension == \"wav\"){\r\n                    isAcceptableExtension = true;\r\n                }\r\n                else{\r\n                    // if wong extansion\r\n                    alert('Max file size : 2MB. Supported extensions: mp3, m4a, ogg, wav');\r\n                }\r\n\r\n                // check file extension and size (2MB)\r\n                if(isAcceptableExtension && fileSize < 2){\r\n                    console.log('file size and ext is good');\r\n\r\n                    // loading icon------------------------------------\r\n                    this.setState({\r\n                        loadingIcon: true,\r\n                    });\r\n\r\n                    // base64--------------------------------------------\r\n                    // testing api post\r\n                    let userData = {\r\n                        'userId': userId,\r\n                        'fileName': fileNameSplit[0],\r\n                        'created_at': Date.now(),   // UTC timestamp in milliseconds\r\n                        'stage': config.stage,\r\n                    };\r\n\r\n                    const userFile = ev.target.files[0];\r\n\r\n                    console.log('userdata: ', userData);\r\n\r\n                    const that = this;\r\n\r\n                    // get binary string-----------------------------------------\r\n                    (function handleFileSelect(evt) {\r\n                        var f = userFile; // FileList object\r\n                        var reader = new FileReader();\r\n                        // Closure to capture the file information.\r\n                        reader.onload = (function(theFile) {\r\n                            return function(e) {                                       \r\n\r\n                                var binaryData = e.target.result;\r\n                                //Converting Binary Data to base 64\r\n                                var base64String = window.btoa(binaryData);\r\n                                userData.user_file = base64String;\r\n\r\n                                console.log('base64string: ', base64String);\r\n\r\n                                // get token--------------------------------------------------\r\n                                console.log('that', that);\r\n                                that.getAuthenticatedUser().getSession(function(err, session){\r\n                                    if(err){\r\n                                        alert('error: session expired');\r\n                                    }\r\n                                    else{\r\n\r\n                                        // check email\r\n                                        if(that.checkLoggedInemailIsSameAsSendingRequest(userData.userId)){\r\n\r\n                                             axios({\r\n                                                // url: config.apiGateway.uploadfile,\r\n                                                method: 'post',\r\n                                                data: JSON.stringify(userData),\r\n                                                contentType: 'application/json',\r\n                                                headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                                            }).then(response =>{\r\n                                                console.log('success response: ', response);\r\n\r\n                                            }).catch(err =>{\r\n                                                console.log('err: ', err);\r\n                                            });\r\n\r\n                                        }\r\n                                    }\r\n                                })\r\n\r\n                            };\r\n                        })(f);\r\n                        // Read in the image file as a data URL.\r\n                        reader.readAsBinaryString(f);\r\n                    })();\r\n\r\n                }\r\n            }\r\n            else{\r\n                const label = ev.target.name +2;\r\n                this.setState({[label]:labelVal});\r\n            }\r\n        }\r\n    }\r\n\r\n    audioEl = document.createElement('audio');\r\n\r\n    playPauseAudio = (newMusicId, newFileUrl) =>{\r\n        // let currentPlayingId = null;\r\n\r\n        console.log('test');\r\n        console.log('newMusicId: ', newMusicId);\r\n        console.log('old musicid: ', this.state.playPauseAudio.musicId);\r\n        console.log('newFileUrl: ', newFileUrl);\r\n\r\n        // check if user wants to play different music\r\n        if(this.state.playPauseAudio.musicId === newMusicId){\r\n            console.log('same music id');\r\n            console.log('t f: ', this.audioEl.paused);\r\n            if(this.audioEl.paused){\r\n                console.log('music paused');\r\n                // play music\r\n                this.audioEl.play();\r\n                // update UI\r\n                const newPlayPauseAudio = {...this.state.playPauseAudio};\r\n                newPlayPauseAudio.playing = true;\r\n                this.setState({\r\n                   playPauseAudio: newPlayPauseAudio\r\n                });\r\n            }\r\n            else{\r\n                console.log('music is playing');\r\n                // pause music\r\n                this.audioEl.pause();\r\n                // update UI\r\n                const newPlayPauseAudio = {...this.state.playPauseAudio};\r\n                newPlayPauseAudio.playing = false;\r\n                this.setState({\r\n                    playPauseAudio: newPlayPauseAudio\r\n                });\r\n            }\r\n        }\r\n        else{\r\n             // play a different music\r\n             console.log('different music');\r\n\r\n             const that = this;\r\n\r\n            // ajax call ----------------------------------------\r\n            // const path = newFileUrl.split(kenaConfig.musicBucket)[1];\r\n            const path = newFileUrl.split(config.bucket.musicBucket)[1];\r\n\r\n            console.log('path: ', path);\r\n\r\n            const ajaxData = {\r\n                path: path,\r\n                'stage': config.stage,\r\n            }\r\n\r\n            this.getAuthenticatedUser().getSession(function(err, session){\r\n                if(err){\r\n                    alert('error: session expired');\r\n                }\r\n                else{\r\n\r\n                    console.log('ajaxdata: ', ajaxData);\r\n\r\n                    axios({\r\n                        url: config.apiGateway.downloadfile,\r\n                        method: 'post',\r\n                        data: JSON.stringify(ajaxData),\r\n                        headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                    }).then(response =>{\r\n                        console.log('success response: ', response);\r\n\r\n                        // play audio player---------------------\r\n                        \r\n                        that.audioEl.src = response.data;\r\n                        that.audioEl.play();\r\n                        // update UI\r\n                        const newPlayPauseAudio = {...that.state.playPauseAudio};\r\n                        newPlayPauseAudio.musicId = newMusicId;\r\n                        newPlayPauseAudio.fileUrl = newFileUrl;\r\n                        newPlayPauseAudio.playing = true;\r\n\r\n                        that.setState({\r\n                            playPauseAudio: newPlayPauseAudio\r\n                        });\r\n\r\n                    }).catch(err =>{\r\n                        console.log('err: ', err);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    checkAudioIcon = (musicId) =>{\r\n        console.log('musicId: ', musicId);\r\n        console.log('state musicId: ', this.state.playPauseAudio.musicId);\r\n        console.log('state plying: ', this.state.playPauseAudio.playing);\r\n        if(this.state.playPauseAudio.musicId === musicId && this.state.playPauseAudio.playing){\r\n            return 'pauseIcon';\r\n        }\r\n        else{\r\n            return 'playIcon'\r\n        }\r\n    }\r\n\r\n    descriptionChangeHandler = (ev, musicId, type) =>{\r\n        const val = ev.target.value;\r\n\r\n        // find index\r\n        const index = this.state.myMusic.findIndex(val=>{\r\n            return val.music_id === musicId;\r\n        });\r\n\r\n        // copy object\r\n        const copiedMusic = {...this.state.myMusic[index]};\r\n\r\n        if( type === 'description'){\r\n            copiedMusic.music_description = val;\r\n        }\r\n        else if(type === 'title'){\r\n            copiedMusic.music_title = val;\r\n        }\r\n        \r\n        // update data\r\n        const myMusic = [...this.state.myMusic];\r\n        myMusic[index] = copiedMusic;\r\n\r\n        this.setState({\r\n            myMusic: myMusic\r\n        });\r\n\r\n    }\r\n\r\n    descriptionBlurredHandler = (musicId) =>{\r\n        // find indes\r\n        const index = this.state.myMusic.findIndex(val=>{\r\n            return val.music_id === musicId;\r\n        });\r\n\r\n        // update db\r\n        const ajaxUrl = config.apiGateway.update_music_info;\r\n\r\n        const ajaxData = {\r\n            \"user_id\": this.state.userId,\r\n            \"music_id\": musicId,\r\n            \"modified_at\": Date.now(),\r\n            \"music_title\": this.state.myMusic[index].music_title,\r\n            // \"music_genre\" : myMusic[musicIndex].music_genre,\r\n            // \"music_instrument\" : myMusic[musicIndex].music_instrument,\r\n            \"music_description\" : this.state.myMusic[index].music_description,\r\n            'stage': config.stage,\r\n        }\r\n\r\n        console.log('ajaxData: ', ajaxData);\r\n\r\n        this.updateDatabase(ajaxData, ajaxUrl);\r\n    }\r\n\r\n\r\n    updateDatabase = (ajaxData, ajaxUrl) =>{\r\n        console.log('ajaxData: ', ajaxData);\r\n        console.log('ajaxUrl: ', ajaxUrl);\r\n\r\n        // get token\r\n        this.getAuthenticatedUser().getSession(function(err, session){\r\n            if(err){\r\n                alert('error: session expired');\r\n            }\r\n            else{            \r\n                axios({\r\n                    url: ajaxUrl,\r\n                    method: 'post',\r\n                    data: ajaxData,\r\n                    headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                }).then(response =>{\r\n                    console.log('success response: ', response);\r\n                }).catch(err =>{\r\n                    console.log('err: ', err);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n  \r\n    genreChangeHandler = (value, musicId) =>{\r\n        console.log('value: ', value);\r\n        console.log('musicId: ', musicId);\r\n\r\n        // 2. value is obj, need to convert obj to array to save\r\n        let objValueToArray = []; // empty\r\n        if(value){\r\n            objValueToArray = value.map(obj=>{\r\n                return obj.value;\r\n            });\r\n        }\r\n\r\n        console.log('objValueToArray', objValueToArray);\r\n\r\n        const index = this.state.myMusic.findIndex(val=>{\r\n            return val.music_id === musicId;\r\n        });\r\n\r\n        // update ui\r\n        const updatedData = produce(this.state.myMusic, draft =>{\r\n            draft[index].music_genre = objValueToArray;\r\n        });\r\n\r\n        this.setState({\r\n            myMusic: updatedData\r\n        });\r\n        \r\n    }\r\n\r\n    tabButtonClicked = (name) =>{\r\n        console.log('name', name);\r\n        this.setState({activeTab: name});\r\n    }\r\n\r\n    testFunc = () =>{\r\n        console.log('test func');\r\n    }\r\n\r\n    createEarlyLateChart = (rhythmChartX, rhythmChartY) =>{\r\n\r\n        // chart for rhythm analysis\r\n        // calculate color\r\n        const rhythmBackgroundColor = [];\r\n        for(let i=0; i<rhythmChartY.length; i++){\r\n            if(rhythmChartY[i] < 0.25){\r\n                rhythmBackgroundColor.push('rgba(230, 166, 166, 1)');\r\n            }\r\n            else if(rhythmChartY[i] < 0.5){\r\n                rhythmBackgroundColor.push('rgba(230, 166, 166, 1)');\r\n            }\r\n            else{\r\n                rhythmBackgroundColor.push('rgba(230, 166, 166, 1)');\r\n            }\r\n        }\r\n\r\n        // anchor for plugin\r\n        const rhythmAnchor = [];\r\n        for(let i=0; i<rhythmChartY.length; i++){\r\n            if(rhythmChartY[i] < 0){\r\n                rhythmAnchor.push('end');\r\n            }\r\n            else{\r\n                rhythmAnchor.push('start');\r\n            }\r\n        }\r\n\r\n       \r\n        const earlyLateChartRef = this.earlyLateChart.current.getContext(\"2d\");\r\n  \r\n        new Chart(earlyLateChartRef, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: rhythmChartX,\r\n                datasets: [{\r\n                    label: 'error',\r\n                    data: rhythmChartY,\r\n                    backgroundColor: rhythmBackgroundColor,\r\n                    // borderColor: [\r\n                    //     'rgba(89, 89, 89, 1)',\r\n                    //     'rgba(89, 89, 89, 1)',\r\n                    // ],\r\n                    borderWidth: 1,\r\n                }]\r\n            },\r\n            options: {\r\n                // responsive: true,\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    yAxes: [{\r\n                        gridLines: {\r\n                            display: false,\r\n                        },\r\n                        ticks: {\r\n                            display: true,\r\n                            fontColor: 'black',\r\n                            min: -100,\r\n                            max: 100,\r\n                            callback: function(val, index, values){\r\n                                return val + '%';\r\n                            }\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            display: false,\r\n                        },\r\n                        scaleLabel: {\r\n                            display: false,\r\n                            labelString: 'seconds'\r\n                        },\r\n                        ticks: {\r\n                            display: true,\r\n                            beginAtZero: false,\r\n                            fontColor: 'black',\r\n                            callback: function(val, index, values){\r\n                                return val + 's';\r\n                            }\r\n                        }\r\n                    }]\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                plugins: {\r\n                    datalabels: {\r\n                        color: 'gray',\r\n                        align: 'center',\r\n                        anchor: rhythmAnchor,\r\n                        formatter: function(value, context){\r\n                            // console.log('value : ', value);\r\n                            // console.log('context: ', context);\r\n                            return '';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //\r\n        const chartRef2 = this.chartRef2.current.getContext(\"2d\");\r\n\r\n        new Chart(chartRef2, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [\"Jan\", \"Feb\", \"March\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Sales\",\r\n                        data: [86, 67, 91],\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toggleMobileNavbar = () =>{\r\n        this.setState({\r\n            showMobileNavbar: !this.state.showMobileNavbar\r\n        });\r\n    }\r\n\r\n    changeChartHandler = () =>{\r\n        this.setState({\r\n            rhythmChartX: [\"Jan\", \"Feb\", \"March\"],\r\n            rhythmChartY: [44,55,11]\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log('======================', this.state);\r\n\r\n        let loading = null;\r\n        if(this.state.loadingIcon){\r\n            loading = <div className='loading'>\r\n                    <FontAwesomeIcon\r\n                        icon={faSpinner}\r\n                        color='#4f4f4f'\r\n                        size='6x'\r\n                        spin/>\r\n                </div>\r\n        }\r\n\r\n    \r\n        return (\r\n            <div className='Diagnostics'>\r\n                <section>\r\n                    <div ref={node => {this.navbarNode = node;}}>\r\n                        <Navbar\r\n                            showMobileNavbar={this.state.showMobileNavbar}\r\n                            clicked={this.toggleMobileNavbar}/>\r\n                    </div>\r\n                   \r\n\r\n                    <div style={{paddingTop:120+'px'}}></div>\r\n\r\n                    <SearchbarNav\r\n                        changed={this.uploadMusicHandler}\r\n                        uploadMusic1={this.state.uploadMusic1}\r\n                        uploadMusic2={this.state.uploadMusic2}/>\r\n\r\n                    {loading}\r\n\r\n                    <h1>{this.state.data.music_title}</h1>\r\n\r\n                    {/* tabs------------------------------------------- */}\r\n                    <Tabs\r\n                        activeTab={this.state.activeTab}\r\n                        clicked={this.tabButtonClicked}>\r\n                        \r\n                        {/* use this tabcontent to create buttons */}\r\n                        <div id='Diagnostics' className='tabContent'>\r\n                            <p>Diagnostics</p>\r\n                            <p>lorem jio ioj</p>\r\n\r\n                            <div style={{overflowX:'auto'}}>\r\n                                <div style={{width:500+'px', height:300+'px'}}>\r\n                                    <canvas\r\n                                        id='earlyLateChart'\r\n                                        ref={this.earlyLateChart}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button type='button' onClick={this.changeChartHandler}>change chart</button>\r\n                            \r\n                            <div style={{overflowX:'auto'}}>\r\n                                <div style={{width:500+'px', height:300+'px'}}>\r\n                                    <canvas\r\n                                        id='differentChart'\r\n                                        ref={this.chartRef2}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <p>jopodpj fajdp fjsioa fjdiosaj</p>\r\n\r\n                        </div>\r\n\r\n                        <div id='Score Sheet' className='tabContent'>\r\n                            <p>Score Sheet</p>\r\n                            <p>dsa joia j</p>\r\n                        </div>\r\n\r\n                        <div id='WorkStation' className='tabContent'>\r\n                            <p>workStation</p>\r\n                            <p>a sjiod</p>\r\n                        </div>\r\n                    </Tabs>\r\n\r\n                    \r\n\r\n                   \r\n\r\n                  \r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Diagnostics;","import React, {Component} from 'react';\r\nimport './Library.css';\r\nimport kenaLogo from '../../assets/logo.png';\r\nimport config from '../../config';\r\nimport axios from 'axios';\r\nimport { \r\n    CognitoUserPool, \r\n    AuthenticationDetails, \r\n    CognitoUser,\r\n    CognitoUserSession,\r\n    CognitoUserAttribute\r\n} from 'amazon-cognito-identity-js';\r\nimport bgImage from '../../assets/bg2.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport produce from 'immer';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nimport Navbar from '../../componentes/Navbar/Navbar';\r\nimport Input from '../../componentes/Input/Input';\r\nimport Button from '../../componentes/Button/Button';\r\nimport SearchbarNav from '../../componentes/SearchbarNav/SearchbarNav';\r\nimport Music from '../../componentes/Music/Music';\r\n\r\nclass Library extends Component{\r\n    state={\r\n        userId: '',\r\n        myMusic: [],\r\n        uploadMusic1: 'Upload Music',\r\n        uploadMusic2: 'Upload Music',\r\n        loadingIcon: false,\r\n        showMobileNavbar: false,\r\n        playPauseAudio: {\r\n            musicId: null,\r\n            fileUrl: null,\r\n            playing: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.addEventListener('mousedown', this.handleOutsideClick);\r\n\r\n        // const ajaxData = {\r\n        //     \"user_id\": userId,\r\n        //     'page_no': 0,\r\n        //     'stage': config.stage,\r\n        // }\r\n\r\n        // axios({\r\n        //     url: config.apiGateway.get_music_list,\r\n        //     method: 'post',\r\n        //     data: ajaxData,\r\n        //     headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n        // }).then(response =>{\r\n        // console.log('success response: ', response);\r\n        // }).catch(err =>{\r\n        //     console.log('err: ', err);\r\n        // });\r\n        \r\n        const poolData = {\r\n            UserPoolId: config.pool_data.UserPoolId, // Your user pool id here\r\n            ClientId: config.pool_data.ClientId, // Your client id here\r\n        };\r\n\r\n        var userPool = new CognitoUserPool(poolData);\r\n        var cognitoUser = userPool.getCurrentUser();\r\n\r\n        console.log('cognito user: ', cognitoUser);\r\n\r\n        if (cognitoUser != null) {\r\n            // loading icon----------------------------------\r\n            this.setState({\r\n                loadingIcon: true\r\n            });\r\n\r\n            // save userid\r\n            const userId = cognitoUser.username;\r\n            this.setState({\r\n                userId: userId\r\n            });\r\n\r\n            // get token\r\n            this.getAuthenticatedUser().getSession(function(err, session){\r\n                if(err){\r\n                    alert('error: session expired');\r\n                }\r\n                else{\r\n                    const ajaxData = {\r\n                        // \"user_id\": userId,\r\n                        \"music_genre_id\": 'home', \r\n                        'stage': config.stage,\r\n                    }\r\n\r\n                    axios({\r\n                        url: config.apiGateway.get_music_library,\r\n                        method: 'post',\r\n                        data: ajaxData,\r\n                        headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                    }).then(response =>{\r\n                        console.log('succeeded loading data on page load');  \r\n                        console.log('response', response);      \r\n                        \r\n                        this.setState({\r\n                            data: response.data,\r\n                            loadingIcon: false\r\n                        });\r\n\r\n                    }).catch(err =>{\r\n                        console.log('err: ', err);\r\n                    });\r\n                    \r\n                }\r\n            }.bind(this));\r\n\r\n        }\r\n        else{\r\n            window.location.href = './index.html?v=17';\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.removeEventListener('mousedown', this.handleOutsideClick);\r\n    } \r\n\r\n    handleOutsideClick = (e) =>{\r\n        // clicked navbar?\r\n        if(this.navbarNode.contains(e.target)){\r\n            \r\n        }\r\n        else{\r\n            console.log('outside navbar');\r\n            this.setState({\r\n                showMobileNavbar: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getAuthenticatedUser = () =>{\r\n        const poolData = {\r\n            UserPoolId: config.pool_data.UserPoolId, // Your user pool id here\r\n            ClientId: config.pool_data.ClientId, // Your client id here\r\n        };\r\n\r\n        var userPool = new CognitoUserPool(poolData);\r\n        return userPool.getCurrentUser();\r\n    }\r\n\r\n    checkLoggedInemailIsSameAsSendingRequest = (snedingEmail) =>{\r\n        // console.log('sendingmeial: ', snedingEmail);\r\n        const userId = this.state.userId;\r\n        // console.log('userid: ', userId);\r\n        if(userId == snedingEmail){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    toggleMobileNavbar = () =>{\r\n        this.setState({\r\n            showMobileNavbar: !this.state.showMobileNavbar\r\n        });\r\n    }\r\n\r\n    uploadMusicHandler = (ev) =>{\r\n        console.log('type: ', ev.target.type);\r\n        if(ev.target.type && ev.target.type === 'file'){\r\n            // display file name when file was selected\r\n            const label = ev.target.nextElementSibling;\r\n            const labelVal = label.innerHTML;\r\n\r\n            let fileName = '';\r\n            if(ev.target.files && ev.target.files.length > 1){\r\n                fileName = (ev.target.getAttribute('data-multiple.caption') || '').replace('{count}', ev.target.files.length);\r\n            }\r\n            else{\r\n                fileName = ev.target.value.split('\\\\').pop();\r\n\r\n                console.log('e target files[0]: ', ev.target.files[0]);\r\n                console.log('file name: ', ev.target.files[0].name);\r\n                console.log('file type: ', ev.target.files[0].type);\r\n                console.log('file size: ', ev.target.files[0].size/1024/1024 + 'MB');\r\n            }\r\n\r\n            if(fileName){\r\n                const span = ev.target.name +1;\r\n                console.log('span state: ', span);\r\n                this.setState({ [span]: fileName });\r\n\r\n                // file extension and size vertification\r\n                const fileNameSplit =  ev.target.files[0].name.split('.');\r\n                let fileExtension = fileNameSplit[fileNameSplit.length -1];\r\n                fileExtension = fileExtension.toLowerCase();\r\n                const fileSize = Math.round(ev.target.files[0].size/1024/1024);\r\n\r\n                const userId = this.state.userId;\r\n                console.log('ext, size: ', fileExtension + \", \", fileSize);\r\n                console.log('filenamesplit[0]: ', fileNameSplit[0]);\r\n                console.log('userid: ', userId);\r\n\r\n                let isAcceptableExtension = null;\r\n                if(fileExtension == \"mp3\" || fileExtension == \"m4a\" || fileExtension == \"ogg\" || fileExtension == \"wav\"){\r\n                    isAcceptableExtension = true;\r\n                }\r\n                else{\r\n                    // if wong extansion\r\n                    alert('Max file size : 2MB. Supported extensions: mp3, m4a, ogg, wav');\r\n                }\r\n\r\n                // check file extension and size (2MB)\r\n                if(isAcceptableExtension && fileSize < 2){\r\n                    console.log('file size and ext is good');\r\n\r\n                    // loading icon------------------------------------\r\n                    this.setState({\r\n                        loadingIcon: true,\r\n                    });\r\n\r\n                    // base64--------------------------------------------\r\n                    // testing api post\r\n                    let userData = {\r\n                        'userId': userId,\r\n                        'fileName': fileNameSplit[0],\r\n                        'created_at': Date.now(),   // UTC timestamp in milliseconds\r\n                        'stage': config.stage,\r\n                    };\r\n\r\n                    const userFile = ev.target.files[0];\r\n\r\n                    console.log('userdata: ', userData);\r\n\r\n                    const that = this;\r\n\r\n                    // get binary string-----------------------------------------\r\n                    (function handleFileSelect(evt) {\r\n                        var f = userFile; // FileList object\r\n                        var reader = new FileReader();\r\n                        // Closure to capture the file information.\r\n                        reader.onload = (function(theFile) {\r\n                            return function(e) {                                       \r\n\r\n                                var binaryData = e.target.result;\r\n                                //Converting Binary Data to base 64\r\n                                var base64String = window.btoa(binaryData);\r\n                                userData.user_file = base64String;\r\n\r\n                                console.log('base64string: ', base64String);\r\n\r\n                                // get token--------------------------------------------------\r\n                                console.log('that', that);\r\n                                that.getAuthenticatedUser().getSession(function(err, session){\r\n                                    if(err){\r\n                                        alert('error: session expired');\r\n                                    }\r\n                                    else{\r\n\r\n                                        // check email\r\n                                        if(that.checkLoggedInemailIsSameAsSendingRequest(userData.userId)){\r\n\r\n                                             axios({\r\n                                                // url: config.apiGateway.uploadfile,\r\n                                                method: 'post',\r\n                                                data: JSON.stringify(userData),\r\n                                                contentType: 'application/json',\r\n                                                headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                                            }).then(response =>{\r\n                                                console.log('success response: ', response);\r\n\r\n                                            }).catch(err =>{\r\n                                                console.log('err: ', err);\r\n                                            });\r\n\r\n                                        }\r\n                                    }\r\n                                })\r\n\r\n                            };\r\n                        })(f);\r\n                        // Read in the image file as a data URL.\r\n                        reader.readAsBinaryString(f);\r\n                    })();\r\n\r\n                }\r\n            }\r\n            else{\r\n                const label = ev.target.name +2;\r\n                this.setState({[label]:labelVal});\r\n            }\r\n        }\r\n    }\r\n\r\n    audioEl = document.createElement('audio');\r\n\r\n    playPauseAudio = (newMusicId, newFileUrl) =>{\r\n        // let currentPlayingId = null;\r\n\r\n        console.log('test');\r\n        console.log('newMusicId: ', newMusicId);\r\n        console.log('old musicid: ', this.state.playPauseAudio.musicId);\r\n        console.log('newFileUrl: ', newFileUrl);\r\n\r\n        // check if user wants to play different music\r\n        if(this.state.playPauseAudio.musicId === newMusicId){\r\n            console.log('same music id');\r\n            console.log('t f: ', this.audioEl.paused);\r\n            if(this.audioEl.paused){\r\n                console.log('music paused');\r\n                // play music\r\n                this.audioEl.play();\r\n                // update UI\r\n                const newPlayPauseAudio = {...this.state.playPauseAudio};\r\n                newPlayPauseAudio.playing = true;\r\n                this.setState({\r\n                   playPauseAudio: newPlayPauseAudio\r\n                });\r\n            }\r\n            else{\r\n                console.log('music is playing');\r\n                // pause music\r\n                this.audioEl.pause();\r\n                // update UI\r\n                const newPlayPauseAudio = {...this.state.playPauseAudio};\r\n                newPlayPauseAudio.playing = false;\r\n                this.setState({\r\n                    playPauseAudio: newPlayPauseAudio\r\n                });\r\n            }\r\n        }\r\n        else{\r\n             // play a different music\r\n             console.log('different music');\r\n\r\n             const that = this;\r\n\r\n            // ajax call ----------------------------------------\r\n            // const path = newFileUrl.split(kenaConfig.musicBucket)[1];\r\n            const path = newFileUrl.split(config.bucket.musicBucket)[1];\r\n\r\n            console.log('path: ', path);\r\n\r\n            const ajaxData = {\r\n                path: path,\r\n                'stage': config.stage,\r\n            }\r\n\r\n            this.getAuthenticatedUser().getSession(function(err, session){\r\n                if(err){\r\n                    alert('error: session expired');\r\n                }\r\n                else{\r\n\r\n                    console.log('ajaxdata: ', ajaxData);\r\n\r\n                    axios({\r\n                        url: config.apiGateway.downloadfile,\r\n                        method: 'post',\r\n                        data: JSON.stringify(ajaxData),\r\n                        headers: {'Authorization': session.getIdToken().getJwtToken()}, \r\n                    }).then(response =>{\r\n                        console.log('success response: ', response);\r\n\r\n                        // play audio player---------------------\r\n                        \r\n                        that.audioEl.src = response.data;\r\n                        that.audioEl.play();\r\n                        // update UI\r\n                        const newPlayPauseAudio = {...that.state.playPauseAudio};\r\n                        newPlayPauseAudio.musicId = newMusicId;\r\n                        newPlayPauseAudio.fileUrl = newFileUrl;\r\n                        newPlayPauseAudio.playing = true;\r\n\r\n                        that.setState({\r\n                            playPauseAudio: newPlayPauseAudio\r\n                        });\r\n\r\n                    }).catch(err =>{\r\n                        console.log('err: ', err);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    checkAudioIcon = (musicId) =>{\r\n        console.log('musicId: ', musicId);\r\n        console.log('state musicId: ', this.state.playPauseAudio.musicId);\r\n        console.log('state plying: ', this.state.playPauseAudio.playing);\r\n        if(this.state.playPauseAudio.musicId === musicId && this.state.playPauseAudio.playing){\r\n            return 'pauseIcon';\r\n        }\r\n        else{\r\n            return 'playIcon'\r\n        }\r\n    }\r\n\r\n  \r\n\r\n    diagnosticsButtonClickHandler = (ev, musicId) =>{\r\n        ev.preventDefault();\r\n        console.log('diag button clicked');\r\n        console.log('musicId: ', musicId);\r\n\r\n        const myPassword = 'fujiappletastgreat';\r\n\r\n        const encryptedUserId = CryptoJS.AES.encrypt(this.state.userId, myPassword);\r\n        const encryptedMusicId = CryptoJS.AES.encrypt(musicId, myPassword);\r\n        \r\n        const musicData = {\r\n            'userId': encryptedUserId.toString(),\r\n            'authorId': encryptedUserId.toString(),\r\n            \"musicId\": encryptedMusicId.toString(),\r\n        }\r\n\r\n        localStorage.setItem('kenaMusicData', JSON.stringify(musicData));\r\n\r\n        // console.log('redirect to diagnostics page');\r\n        window.location.href = './diagnostics';\r\n\r\n    }\r\n\r\n    render(){\r\n        console.log('======================', this.state);\r\n\r\n        let loading = null;\r\n        if(this.state.loadingIcon){\r\n            loading = <div className='loading'>\r\n                    <FontAwesomeIcon\r\n                        icon={faSpinner}\r\n                        color='#4f4f4f'\r\n                        size='6x'\r\n                        spin/>\r\n                </div>\r\n        }\r\n\r\n      \r\n    \r\n        return (\r\n            <div className='Mymusic'>\r\n                <section>\r\n                <div ref={node => {this.navbarNode = node;}}>\r\n                    <Navbar\r\n                        showMobileNavbar={this.state.showMobileNavbar}\r\n                        clicked={this.toggleMobileNavbar}/>\r\n                </div>    \r\n\r\n                <div style={{paddingTop:120+'px'}}></div>\r\n\r\n                <SearchbarNav\r\n                    changed={this.uploadMusicHandler}\r\n                    uploadMusic1={this.state.uploadMusic1}\r\n                    uploadMusic2={this.state.uploadMusic2}\r\n                />\r\n\r\n                <h1>Library</h1>  \r\n\r\n                {loading}              \r\n                  \r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Library;","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport Login from './pages/Login/Login';\nimport Signup from './pages/Signup/Signup';\nimport Mymusic from './pages/Mymusic/Mymusic';\nimport Diagnostics from './pages/Diagnostics/Diagnostics';\nimport Library from './pages/Library/Library';\n\nclass App extends Component {\n\n  render() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n            <Route path='/' exact component={Login}/>\n            <Route path='/signup' exact component={Signup}/>\n            <Route path='/my-music' exact component={Mymusic}/>\n            <Route path='/diagnostics' exact component={Diagnostics}/>\n            <Route path='/library' exact component={Library}/>\n            </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1ae84bdb.png\";","module.exports = __webpack_public_path__ + \"static/media/bg2.d7f8d013.png\";"],"sourceRoot":""}